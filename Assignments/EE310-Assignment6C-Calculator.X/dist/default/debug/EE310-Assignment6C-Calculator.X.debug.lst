

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Apr 10 14:21:40 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F47K42 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   003FE0                     bsr             equ	16352
    59   003FE9                     fsr0            equ	16361
    60   003FEA                     fsr0h           equ	16362
    61   003FE9                     fsr0l           equ	16361
    62   003FE1                     fsr1            equ	16353
    63   003FE2                     fsr1h           equ	16354
    64   003FE1                     fsr1l           equ	16353
    65   003FD9                     fsr2            equ	16345
    66   003FDA                     fsr2h           equ	16346
    67   003FD9                     fsr2l           equ	16345
    68   003FEF                     indf0           equ	16367
    69   003FE7                     indf1           equ	16359
    70   003FDF                     indf2           equ	16351
    71   003FD2                     intcon          equ	16338
    72   0039E5                     nvmcon          equ	14821
    73   003FF9                     pcl             equ	16377
    74   003FFA                     pclath          equ	16378
    75   003FFB                     pclatu          equ	16379
    76   003FEB                     plusw0          equ	16363
    77   003FE3                     plusw1          equ	16355
    78   003FDB                     plusw2          equ	16347
    79   003FED                     postdec0        equ	16365
    80   003FE5                     postdec1        equ	16357
    81   003FDD                     postdec2        equ	16349
    82   003FEE                     postinc0        equ	16366
    83   003FE6                     postinc1        equ	16358
    84   003FDE                     postinc2        equ	16350
    85   003FEC                     preinc0         equ	16364
    86   003FE4                     preinc1         equ	16356
    87   003FDC                     preinc2         equ	16348
    88   003FF3                     prod            equ	16371
    89   003FF4                     prodh           equ	16372
    90   003FF3                     prodl           equ	16371
    91   003FD8                     status          equ	16344
    92   003FF5                     tablat          equ	16373
    93   003FF6                     tblptr          equ	16374
    94   003FF7                     tblptrh         equ	16375
    95   003FF6                     tblptrl         equ	16374
    96   003FF8                     tblptru         equ	16376
    97   003FFD                     tosl            equ	16381
    98   003FE8                     wreg            equ	16360
    99   003880                     STATUS_CSHAD    equ	14464	;# 
   100   003881                     WREG_CSHAD      equ	14465	;# 
   101   003882                     BSR_CSHAD       equ	14466	;# 
   102   003883                     SHADCON         equ	14467	;# 
   103   003884                     STATUS_SHAD     equ	14468	;# 
   104   003885                     WREG_SHAD       equ	14469	;# 
   105   003886                     BSR_SHAD        equ	14470	;# 
   106   003887                     PCLATH_SHAD     equ	14471	;# 
   107   003888                     PCLATU_SHAD     equ	14472	;# 
   108   003889                     FSR0SH          equ	14473	;# 
   109   003889                     FSR0L_SHAD      equ	14473	;# 
   110   00388A                     FSR0H_SHAD      equ	14474	;# 
   111   00388B                     FSR1SH          equ	14475	;# 
   112   00388B                     FSR1L_SHAD      equ	14475	;# 
   113   00388C                     FSR1H_SHAD      equ	14476	;# 
   114   00388D                     FSR2SH          equ	14477	;# 
   115   00388D                     FSR2L_SHAD      equ	14477	;# 
   116   00388E                     FSR2H_SHAD      equ	14478	;# 
   117   00388F                     PRODSH          equ	14479	;# 
   118   00388F                     PRODL_SHAD      equ	14479	;# 
   119   003890                     PRODH_SHAD      equ	14480	;# 
   120   00389D                     IVTADL          equ	14493	;# 
   121   00389E                     IVTADH          equ	14494	;# 
   122   00389F                     IVTADU          equ	14495	;# 
   123   00395B                     WDTCON0         equ	14683	;# 
   124   00395C                     WDTCON1         equ	14684	;# 
   125   00395D                     WDTPSL          equ	14685	;# 
   126   00395E                     WDTPSH          equ	14686	;# 
   127   00395F                     WDTTMR          equ	14687	;# 
   128   003960                     CRCDATA         equ	14688	;# 
   129   003960                     CRCDATL         equ	14688	;# 
   130   003961                     CRCDATH         equ	14689	;# 
   131   003962                     CRCACC          equ	14690	;# 
   132   003962                     CRCACCL         equ	14690	;# 
   133   003963                     CRCACCH         equ	14691	;# 
   134   003964                     CRCSHFT         equ	14692	;# 
   135   003964                     CRCSHIFTL       equ	14692	;# 
   136   003965                     CRCSHIFTH       equ	14693	;# 
   137   003966                     CRCXOR          equ	14694	;# 
   138   003966                     CRCXORL         equ	14694	;# 
   139   003967                     CRCXORH         equ	14695	;# 
   140   003968                     CRCCON0         equ	14696	;# 
   141   003969                     CRCCON1         equ	14697	;# 
   142   003976                     SCANLADR        equ	14710	;# 
   143   003976                     SCANLADRL       equ	14710	;# 
   144   003977                     SCANLADRH       equ	14711	;# 
   145   003978                     SCANLADRU       equ	14712	;# 
   146   003979                     SCANHADR        equ	14713	;# 
   147   003979                     SCANHADRL       equ	14713	;# 
   148   00397A                     SCANHADRH       equ	14714	;# 
   149   00397B                     SCANHADRU       equ	14715	;# 
   150   00397C                     SCANCON0        equ	14716	;# 
   151   00397D                     SCANTRIG        equ	14717	;# 
   152   003980                     IPR0            equ	14720	;# 
   153   003981                     IPR1            equ	14721	;# 
   154   003982                     IPR2            equ	14722	;# 
   155   003983                     IPR3            equ	14723	;# 
   156   003984                     IPR4            equ	14724	;# 
   157   003985                     IPR5            equ	14725	;# 
   158   003986                     IPR6            equ	14726	;# 
   159   003987                     IPR7            equ	14727	;# 
   160   003988                     IPR8            equ	14728	;# 
   161   003989                     IPR9            equ	14729	;# 
   162   00398A                     IPR10           equ	14730	;# 
   163   003990                     PIE0            equ	14736	;# 
   164   003991                     PIE1            equ	14737	;# 
   165   003992                     PIE2            equ	14738	;# 
   166   003993                     PIE3            equ	14739	;# 
   167   003994                     PIE4            equ	14740	;# 
   168   003995                     PIE5            equ	14741	;# 
   169   003996                     PIE6            equ	14742	;# 
   170   003997                     PIE7            equ	14743	;# 
   171   003998                     PIE8            equ	14744	;# 
   172   003999                     PIE9            equ	14745	;# 
   173   00399A                     PIE10           equ	14746	;# 
   174   0039A0                     PIR0            equ	14752	;# 
   175   0039A1                     PIR1            equ	14753	;# 
   176   0039A2                     PIR2            equ	14754	;# 
   177   0039A3                     PIR3            equ	14755	;# 
   178   0039A4                     PIR4            equ	14756	;# 
   179   0039A5                     PIR5            equ	14757	;# 
   180   0039A6                     PIR6            equ	14758	;# 
   181   0039A7                     PIR7            equ	14759	;# 
   182   0039A8                     PIR8            equ	14760	;# 
   183   0039A9                     PIR9            equ	14761	;# 
   184   0039AA                     PIR10           equ	14762	;# 
   185   0039C0                     PMD0            equ	14784	;# 
   186   0039C1                     PMD1            equ	14785	;# 
   187   0039C2                     PMD2            equ	14786	;# 
   188   0039C3                     PMD3            equ	14787	;# 
   189   0039C4                     PMD4            equ	14788	;# 
   190   0039C5                     PMD5            equ	14789	;# 
   191   0039C6                     PMD6            equ	14790	;# 
   192   0039C7                     PMD7            equ	14791	;# 
   193   0039D0                     BORCON          equ	14800	;# 
   194   0039D1                     VREGCON         equ	14801	;# 
   195   0039D8                     CPUDOZE         equ	14808	;# 
   196   0039D9                     OSCCON1         equ	14809	;# 
   197   0039DA                     OSCCON2         equ	14810	;# 
   198   0039DB                     OSCCON3         equ	14811	;# 
   199   0039DC                     OSCSTAT         equ	14812	;# 
   200   0039DC                     OSCSTAT1        equ	14812	;# 
   201   0039DD                     OSCEN           equ	14813	;# 
   202   0039DE                     OSCTUNE         equ	14814	;# 
   203   0039DF                     OSCFRQ          equ	14815	;# 
   204   0039E0                     NVMADRL         equ	14816	;# 
   205   0039E1                     NVMADRH         equ	14817	;# 
   206   0039E3                     NVMDAT          equ	14819	;# 
   207   0039E5                     NVMCON1         equ	14821	;# 
   208   0039E6                     NVMCON2         equ	14822	;# 
   209   0039EF                     PRLOCK          equ	14831	;# 
   210   0039F1                     ISRPR           equ	14833	;# 
   211   0039F2                     MAINPR          equ	14834	;# 
   212   0039F3                     DMA1PR          equ	14835	;# 
   213   0039F4                     DMA2PR          equ	14836	;# 
   214   0039F7                     SCANPR          equ	14839	;# 
   215   003A00                     RA0PPS          equ	14848	;# 
   216   003A01                     RA1PPS          equ	14849	;# 
   217   003A02                     RA2PPS          equ	14850	;# 
   218   003A03                     RA3PPS          equ	14851	;# 
   219   003A04                     RA4PPS          equ	14852	;# 
   220   003A05                     RA5PPS          equ	14853	;# 
   221   003A06                     RA6PPS          equ	14854	;# 
   222   003A07                     RA7PPS          equ	14855	;# 
   223   003A08                     RB0PPS          equ	14856	;# 
   224   003A09                     RB1PPS          equ	14857	;# 
   225   003A0A                     RB2PPS          equ	14858	;# 
   226   003A0B                     RB3PPS          equ	14859	;# 
   227   003A0C                     RB4PPS          equ	14860	;# 
   228   003A0D                     RB5PPS          equ	14861	;# 
   229   003A0E                     RB6PPS          equ	14862	;# 
   230   003A0F                     RB7PPS          equ	14863	;# 
   231   003A10                     RC0PPS          equ	14864	;# 
   232   003A11                     RC1PPS          equ	14865	;# 
   233   003A12                     RC2PPS          equ	14866	;# 
   234   003A13                     RC3PPS          equ	14867	;# 
   235   003A14                     RC4PPS          equ	14868	;# 
   236   003A15                     RC5PPS          equ	14869	;# 
   237   003A16                     RC6PPS          equ	14870	;# 
   238   003A17                     RC7PPS          equ	14871	;# 
   239   003A18                     RD0PPS          equ	14872	;# 
   240   003A19                     RD1PPS          equ	14873	;# 
   241   003A1A                     RD2PPS          equ	14874	;# 
   242   003A1B                     RD3PPS          equ	14875	;# 
   243   003A1C                     RD4PPS          equ	14876	;# 
   244   003A1D                     RD5PPS          equ	14877	;# 
   245   003A1E                     RD6PPS          equ	14878	;# 
   246   003A1F                     RD7PPS          equ	14879	;# 
   247   003A20                     RE0PPS          equ	14880	;# 
   248   003A21                     RE1PPS          equ	14881	;# 
   249   003A22                     RE2PPS          equ	14882	;# 
   250   003A40                     ANSELA          equ	14912	;# 
   251   003A41                     WPUA            equ	14913	;# 
   252   003A42                     ODCONA          equ	14914	;# 
   253   003A43                     SLRCONA         equ	14915	;# 
   254   003A44                     INLVLA          equ	14916	;# 
   255   003A45                     IOCAP           equ	14917	;# 
   256   003A46                     IOCAN           equ	14918	;# 
   257   003A47                     IOCAF           equ	14919	;# 
   258   003A50                     ANSELB          equ	14928	;# 
   259   003A51                     WPUB            equ	14929	;# 
   260   003A52                     ODCONB          equ	14930	;# 
   261   003A53                     SLRCONB         equ	14931	;# 
   262   003A54                     INLVLB          equ	14932	;# 
   263   003A55                     IOCBP           equ	14933	;# 
   264   003A56                     IOCBN           equ	14934	;# 
   265   003A57                     IOCBF           equ	14935	;# 
   266   003A5A                     RB1I2C          equ	14938	;# 
   267   003A5B                     RB2I2C          equ	14939	;# 
   268   003A60                     ANSELC          equ	14944	;# 
   269   003A61                     WPUC            equ	14945	;# 
   270   003A62                     ODCONC          equ	14946	;# 
   271   003A63                     SLRCONC         equ	14947	;# 
   272   003A64                     INLVLC          equ	14948	;# 
   273   003A65                     IOCCP           equ	14949	;# 
   274   003A66                     IOCCN           equ	14950	;# 
   275   003A67                     IOCCF           equ	14951	;# 
   276   003A6A                     RC3I2C          equ	14954	;# 
   277   003A6B                     RC4I2C          equ	14955	;# 
   278   003A70                     ANSELD          equ	14960	;# 
   279   003A71                     WPUD            equ	14961	;# 
   280   003A72                     ODCOND          equ	14962	;# 
   281   003A73                     SLRCOND         equ	14963	;# 
   282   003A74                     INLVLD          equ	14964	;# 
   283   003A7A                     RD0I2C          equ	14970	;# 
   284   003A7B                     RD1I2C          equ	14971	;# 
   285   003A80                     ANSELE          equ	14976	;# 
   286   003A81                     WPUE            equ	14977	;# 
   287   003A82                     ODCONE          equ	14978	;# 
   288   003A83                     SLRCONE         equ	14979	;# 
   289   003A84                     INLVLE          equ	14980	;# 
   290   003A85                     IOCEP           equ	14981	;# 
   291   003A86                     IOCEN           equ	14982	;# 
   292   003A87                     IOCEF           equ	14983	;# 
   293   003ABF                     PPSLOCK         equ	15039	;# 
   294   003AC0                     INT0PPS         equ	15040	;# 
   295   003AC1                     INT1PPS         equ	15041	;# 
   296   003AC2                     INT2PPS         equ	15042	;# 
   297   003AC3                     T0CKIPPS        equ	15043	;# 
   298   003AC4                     T1CKIPPS        equ	15044	;# 
   299   003AC5                     T1GPPS          equ	15045	;# 
   300   003AC6                     T3CKIPPS        equ	15046	;# 
   301   003AC7                     T3GPPS          equ	15047	;# 
   302   003AC8                     T5CKIPPS        equ	15048	;# 
   303   003AC9                     T5GPPS          equ	15049	;# 
   304   003ACA                     T2INPPS         equ	15050	;# 
   305   003ACB                     T4INPPS         equ	15051	;# 
   306   003ACC                     T6INPPS         equ	15052	;# 
   307   003ACD                     CCP1PPS         equ	15053	;# 
   308   003ACE                     CCP2PPS         equ	15054	;# 
   309   003ACF                     CCP3PPS         equ	15055	;# 
   310   003AD0                     CCP4PPS         equ	15056	;# 
   311   003AD1                     SMT1WINPPS      equ	15057	;# 
   312   003AD2                     SMT1SIGPPS      equ	15058	;# 
   313   003AD3                     CWG1INPPS       equ	15059	;# 
   314   003AD4                     CWG2INPPS       equ	15060	;# 
   315   003AD5                     CWG3INPPS       equ	15061	;# 
   316   003AD6                     MD1CARLPPS      equ	15062	;# 
   317   003AD7                     MD1CARHPPS      equ	15063	;# 
   318   003AD8                     MD1SRCPPS       equ	15064	;# 
   319   003AD9                     CLCIN0PPS       equ	15065	;# 
   320   003ADA                     CLCIN1PPS       equ	15066	;# 
   321   003ADB                     CLCIN2PPS       equ	15067	;# 
   322   003ADC                     CLCIN3PPS       equ	15068	;# 
   323   003ADD                     ADACTPPS        equ	15069	;# 
   324   003ADE                     SPI1SCKPPS      equ	15070	;# 
   325   003ADF                     SPI1SDIPPS      equ	15071	;# 
   326   003AE0                     SPI1SSPPS       equ	15072	;# 
   327   003AE1                     I2C1SCLPPS      equ	15073	;# 
   328   003AE2                     I2C1SDAPPS      equ	15074	;# 
   329   003AE3                     I2C2SCLPPS      equ	15075	;# 
   330   003AE4                     I2C2SDAPPS      equ	15076	;# 
   331   003AE5                     U1RXPPS         equ	15077	;# 
   332   003AE6                     U1CTSPPS        equ	15078	;# 
   333   003AE8                     U2RXPPS         equ	15080	;# 
   334   003AE9                     U2CTSPPS        equ	15081	;# 
   335   003BC9                     DMA2BUF         equ	15305	;# 
   336   003BCA                     DMA2DCNT        equ	15306	;# 
   337   003BCA                     DMA2DCNTL       equ	15306	;# 
   338   003BCB                     DMA2DCNTH       equ	15307	;# 
   339   003BCC                     DMA2DPTR        equ	15308	;# 
   340   003BCC                     DMA2DPTRL       equ	15308	;# 
   341   003BCD                     DMA2DPTRH       equ	15309	;# 
   342   003BCE                     DMA2DSZ         equ	15310	;# 
   343   003BCE                     DMA2DSZL        equ	15310	;# 
   344   003BCF                     DMA2DSZH        equ	15311	;# 
   345   003BD0                     DMA2DSA         equ	15312	;# 
   346   003BD0                     DMA2DSAL        equ	15312	;# 
   347   003BD1                     DMA2DSAH        equ	15313	;# 
   348   003BD2                     DMA2SCNT        equ	15314	;# 
   349   003BD2                     DMA2SCNTL       equ	15314	;# 
   350   003BD3                     DMA2SCNTH       equ	15315	;# 
   351   003BD4                     DMA2SPTR        equ	15316	;# 
   352   003BD4                     DMA2SPTRL       equ	15316	;# 
   353   003BD5                     DMA2SPTRH       equ	15317	;# 
   354   003BD6                     DMA2SPTRU       equ	15318	;# 
   355   003BD7                     DMA2SSZ         equ	15319	;# 
   356   003BD7                     DMA2SSZL        equ	15319	;# 
   357   003BD8                     DMA2SSZH        equ	15320	;# 
   358   003BD9                     DMA2SSA         equ	15321	;# 
   359   003BD9                     DMA2SSAL        equ	15321	;# 
   360   003BDA                     DMA2SSAH        equ	15322	;# 
   361   003BDB                     DMA2SSAU        equ	15323	;# 
   362   003BDC                     DMA2CON0        equ	15324	;# 
   363   003BDD                     DMA2CON1        equ	15325	;# 
   364   003BDE                     DMA2AIRQ        equ	15326	;# 
   365   003BDF                     DMA2SIRQ        equ	15327	;# 
   366   003BE9                     DMA1BUF         equ	15337	;# 
   367   003BEA                     DMA1DCNT        equ	15338	;# 
   368   003BEA                     DMA1DCNTL       equ	15338	;# 
   369   003BEB                     DMA1DCNTH       equ	15339	;# 
   370   003BEC                     DMA1DPTR        equ	15340	;# 
   371   003BEC                     DMA1DPTRL       equ	15340	;# 
   372   003BED                     DMA1DPTRH       equ	15341	;# 
   373   003BEE                     DMA1DSZ         equ	15342	;# 
   374   003BEE                     DMA1DSZL        equ	15342	;# 
   375   003BEF                     DMA1DSZH        equ	15343	;# 
   376   003BF0                     DMA1DSA         equ	15344	;# 
   377   003BF0                     DMA1DSAL        equ	15344	;# 
   378   003BF1                     DMA1DSAH        equ	15345	;# 
   379   003BF2                     DMA1SCNT        equ	15346	;# 
   380   003BF2                     DMA1SCNTL       equ	15346	;# 
   381   003BF3                     DMA1SCNTH       equ	15347	;# 
   382   003BF4                     DMA1SPTR        equ	15348	;# 
   383   003BF4                     DMA1SPTRL       equ	15348	;# 
   384   003BF5                     DMA1SPTRH       equ	15349	;# 
   385   003BF6                     DMA1SPTRU       equ	15350	;# 
   386   003BF7                     DMA1SSZ         equ	15351	;# 
   387   003BF7                     DMA1SSZL        equ	15351	;# 
   388   003BF8                     DMA1SSZH        equ	15352	;# 
   389   003BF9                     DMA1SSA         equ	15353	;# 
   390   003BF9                     DMA1SSAL        equ	15353	;# 
   391   003BFA                     DMA1SSAH        equ	15354	;# 
   392   003BFB                     DMA1SSAU        equ	15355	;# 
   393   003BFC                     DMA1CON0        equ	15356	;# 
   394   003BFD                     DMA1CON1        equ	15357	;# 
   395   003BFE                     DMA1AIRQ        equ	15358	;# 
   396   003BFF                     DMA1SIRQ        equ	15359	;# 
   397   003C56                     CLC4CON         equ	15446	;# 
   398   003C57                     CLC4POL         equ	15447	;# 
   399   003C58                     CLC4SEL0        equ	15448	;# 
   400   003C59                     CLC4SEL1        equ	15449	;# 
   401   003C5A                     CLC4SEL2        equ	15450	;# 
   402   003C5B                     CLC4SEL3        equ	15451	;# 
   403   003C5C                     CLC4GLS0        equ	15452	;# 
   404   003C5D                     CLC4GLS1        equ	15453	;# 
   405   003C5E                     CLC4GLS2        equ	15454	;# 
   406   003C5F                     CLC4GLS3        equ	15455	;# 
   407   003C60                     CLC3CON         equ	15456	;# 
   408   003C61                     CLC3POL         equ	15457	;# 
   409   003C62                     CLC3SEL0        equ	15458	;# 
   410   003C63                     CLC3SEL1        equ	15459	;# 
   411   003C64                     CLC3SEL2        equ	15460	;# 
   412   003C65                     CLC3SEL3        equ	15461	;# 
   413   003C66                     CLC3GLS0        equ	15462	;# 
   414   003C67                     CLC3GLS1        equ	15463	;# 
   415   003C68                     CLC3GLS2        equ	15464	;# 
   416   003C69                     CLC3GLS3        equ	15465	;# 
   417   003C6A                     CLC2CON         equ	15466	;# 
   418   003C6B                     CLC2POL         equ	15467	;# 
   419   003C6C                     CLC2SEL0        equ	15468	;# 
   420   003C6D                     CLC2SEL1        equ	15469	;# 
   421   003C6E                     CLC2SEL2        equ	15470	;# 
   422   003C6F                     CLC2SEL3        equ	15471	;# 
   423   003C70                     CLC2GLS0        equ	15472	;# 
   424   003C71                     CLC2GLS1        equ	15473	;# 
   425   003C72                     CLC2GLS2        equ	15474	;# 
   426   003C73                     CLC2GLS3        equ	15475	;# 
   427   003C74                     CLC1CON         equ	15476	;# 
   428   003C75                     CLC1POL         equ	15477	;# 
   429   003C76                     CLC1SEL0        equ	15478	;# 
   430   003C77                     CLC1SEL1        equ	15479	;# 
   431   003C78                     CLC1SEL2        equ	15480	;# 
   432   003C79                     CLC1SEL3        equ	15481	;# 
   433   003C7A                     CLC1GLS0        equ	15482	;# 
   434   003C7B                     CLC1GLS1        equ	15483	;# 
   435   003C7C                     CLC1GLS2        equ	15484	;# 
   436   003C7D                     CLC1GLS3        equ	15485	;# 
   437   003C7E                     CLCDATA0        equ	15486	;# 
   438   003CE5                     CLKRCON         equ	15589	;# 
   439   003CE6                     CLKRCLK         equ	15590	;# 
   440   003CFA                     MD1CON0         equ	15610	;# 
   441   003CFB                     MD1CON1         equ	15611	;# 
   442   003CFC                     MD1SRC          equ	15612	;# 
   443   003CFD                     MD1CARL         equ	15613	;# 
   444   003CFE                     MD1CARH         equ	15614	;# 
   445   003D10                     SPI1RXB         equ	15632	;# 
   446   003D11                     SPI1TXB         equ	15633	;# 
   447   003D12                     SPI1TCNT        equ	15634	;# 
   448   003D12                     SPI1TCNTL       equ	15634	;# 
   449   003D13                     SPI1TCNTH       equ	15635	;# 
   450   003D14                     SPI1CON0        equ	15636	;# 
   451   003D15                     SPI1CON1        equ	15637	;# 
   452   003D16                     SPI1CON2        equ	15638	;# 
   453   003D17                     SPI1STATUS      equ	15639	;# 
   454   003D18                     SPI1TWIDTH      equ	15640	;# 
   455   003D19                     SPI1BAUD        equ	15641	;# 
   456   003D1A                     SPI1INTF        equ	15642	;# 
   457   003D1B                     SPI1INTE        equ	15643	;# 
   458   003D1C                     SPI1CLK         equ	15644	;# 
   459   003D54                     I2C2RXB         equ	15700	;# 
   460   003D55                     I2C2TXB         equ	15701	;# 
   461   003D56                     I2C2CNT         equ	15702	;# 
   462   003D57                     I2C2ADB0        equ	15703	;# 
   463   003D58                     I2C2ADB1        equ	15704	;# 
   464   003D59                     I2C2ADR0        equ	15705	;# 
   465   003D5A                     I2C2ADR1        equ	15706	;# 
   466   003D5B                     I2C2ADR2        equ	15707	;# 
   467   003D5C                     I2C2ADR3        equ	15708	;# 
   468   003D5D                     I2C2CON0        equ	15709	;# 
   469   003D5E                     I2C2CON1        equ	15710	;# 
   470   003D5F                     I2C2CON2        equ	15711	;# 
   471   003D60                     I2C2ERR         equ	15712	;# 
   472   003D61                     I2C2STAT0       equ	15713	;# 
   473   003D62                     I2C2STAT1       equ	15714	;# 
   474   003D63                     I2C2PIR         equ	15715	;# 
   475   003D64                     I2C2PIE         equ	15716	;# 
   476   003D65                     I2C2CLK         equ	15717	;# 
   477   003D66                     I2C2BTO         equ	15718	;# 
   478   003D6A                     I2C1RXB         equ	15722	;# 
   479   003D6B                     I2C1TXB         equ	15723	;# 
   480   003D6C                     I2C1CNT         equ	15724	;# 
   481   003D6D                     I2C1ADB0        equ	15725	;# 
   482   003D6E                     I2C1ADB1        equ	15726	;# 
   483   003D6F                     I2C1ADR0        equ	15727	;# 
   484   003D70                     I2C1ADR1        equ	15728	;# 
   485   003D71                     I2C1ADR2        equ	15729	;# 
   486   003D72                     I2C1ADR3        equ	15730	;# 
   487   003D73                     I2C1CON0        equ	15731	;# 
   488   003D74                     I2C1CON1        equ	15732	;# 
   489   003D75                     I2C1CON2        equ	15733	;# 
   490   003D76                     I2C1ERR         equ	15734	;# 
   491   003D77                     I2C1STAT0       equ	15735	;# 
   492   003D78                     I2C1STAT1       equ	15736	;# 
   493   003D79                     I2C1PIR         equ	15737	;# 
   494   003D7A                     I2C1PIE         equ	15738	;# 
   495   003D7B                     I2C1CLK         equ	15739	;# 
   496   003D7C                     I2C1BTO         equ	15740	;# 
   497   003DD0                     U2RXB           equ	15824	;# 
   498   003DD0                     U2RXBL          equ	15824	;# 
   499   003DD2                     U2TXB           equ	15826	;# 
   500   003DD2                     U2TXBL          equ	15826	;# 
   501   003DD4                     U2P1            equ	15828	;# 
   502   003DD4                     U2P1L           equ	15828	;# 
   503   003DD6                     U2P2            equ	15830	;# 
   504   003DD6                     U2P2L           equ	15830	;# 
   505   003DD8                     U2P3            equ	15832	;# 
   506   003DD8                     U2P3L           equ	15832	;# 
   507   003DDA                     U2CON0          equ	15834	;# 
   508   003DDB                     U2CON1          equ	15835	;# 
   509   003DDC                     U2CON2          equ	15836	;# 
   510   003DDD                     U2BRG           equ	15837	;# 
   511   003DDD                     U2BRGL          equ	15837	;# 
   512   003DDE                     U2BRGH          equ	15838	;# 
   513   003DDF                     U2FIFO          equ	15839	;# 
   514   003DE0                     U2UIR           equ	15840	;# 
   515   003DE1                     U2ERRIR         equ	15841	;# 
   516   003DE2                     U2ERRIE         equ	15842	;# 
   517   003DE8                     U1RXB           equ	15848	;# 
   518   003DE8                     U1RXBL          equ	15848	;# 
   519   003DE9                     U1RXCHK         equ	15849	;# 
   520   003DEA                     U1TXB           equ	15850	;# 
   521   003DEA                     U1TXBL          equ	15850	;# 
   522   003DEB                     U1TXCHK         equ	15851	;# 
   523   003DEC                     U1P1            equ	15852	;# 
   524   003DEC                     U1P1L           equ	15852	;# 
   525   003DED                     U1P1H           equ	15853	;# 
   526   003DEE                     U1P2            equ	15854	;# 
   527   003DEE                     U1P2L           equ	15854	;# 
   528   003DEF                     U1P2H           equ	15855	;# 
   529   003DF0                     U1P3            equ	15856	;# 
   530   003DF0                     U1P3L           equ	15856	;# 
   531   003DF1                     U1P3H           equ	15857	;# 
   532   003DF2                     U1CON0          equ	15858	;# 
   533   003DF3                     U1CON1          equ	15859	;# 
   534   003DF4                     U1CON2          equ	15860	;# 
   535   003DF5                     U1BRG           equ	15861	;# 
   536   003DF5                     U1BRGL          equ	15861	;# 
   537   003DF6                     U1BRGH          equ	15862	;# 
   538   003DF7                     U1FIFO          equ	15863	;# 
   539   003DF8                     U1UIR           equ	15864	;# 
   540   003DF9                     U1ERRIR         equ	15865	;# 
   541   003DFA                     U1ERRIE         equ	15866	;# 
   542   003E9C                     DAC1CON1        equ	16028	;# 
   543   003E9E                     DAC1CON0        equ	16030	;# 
   544   003EB8                     CM2CON0         equ	16056	;# 
   545   003EB9                     CM2CON1         equ	16057	;# 
   546   003EBA                     CM2NCH          equ	16058	;# 
   547   003EBB                     CM2PCH          equ	16059	;# 
   548   003EBC                     CM1CON0         equ	16060	;# 
   549   003EBD                     CM1CON1         equ	16061	;# 
   550   003EBE                     CM1NCH          equ	16062	;# 
   551   003EBF                     CM1PCH          equ	16063	;# 
   552   003EC0                     CMOUT           equ	16064	;# 
   553   003EC1                     FVRCON          equ	16065	;# 
   554   003EC3                     ZCDCON          equ	16067	;# 
   555   003EC9                     HLVDCON0        equ	16073	;# 
   556   003ECA                     HLVDCON1        equ	16074	;# 
   557   003ED7                     ADCP            equ	16087	;# 
   558   003EDE                     ADLTH           equ	16094	;# 
   559   003EDE                     ADLTHL          equ	16094	;# 
   560   003EDF                     ADLTHH          equ	16095	;# 
   561   003EE0                     ADUTH           equ	16096	;# 
   562   003EE0                     ADUTHL          equ	16096	;# 
   563   003EE1                     ADUTHH          equ	16097	;# 
   564   003EE2                     ADERR           equ	16098	;# 
   565   003EE2                     ADERRL          equ	16098	;# 
   566   003EE3                     ADERRH          equ	16099	;# 
   567   003EE4                     ADSTPT          equ	16100	;# 
   568   003EE4                     ADSTPTL         equ	16100	;# 
   569   003EE5                     ADSTPTH         equ	16101	;# 
   570   003EE6                     ADFLTR          equ	16102	;# 
   571   003EE6                     ADFLTRL         equ	16102	;# 
   572   003EE7                     ADFLTRH         equ	16103	;# 
   573   003EE8                     ADACC           equ	16104	;# 
   574   003EE8                     ADACCL          equ	16104	;# 
   575   003EE9                     ADACCH          equ	16105	;# 
   576   003EEA                     ADACCU          equ	16106	;# 
   577   003EEB                     ADCNT           equ	16107	;# 
   578   003EEC                     ADRPT           equ	16108	;# 
   579   003EED                     ADPREV          equ	16109	;# 
   580   003EED                     ADPREVL         equ	16109	;# 
   581   003EEE                     ADPREVH         equ	16110	;# 
   582   003EEF                     ADRES           equ	16111	;# 
   583   003EEF                     ADRESL          equ	16111	;# 
   584   003EF0                     ADRESH          equ	16112	;# 
   585   003EF1                     ADPCH           equ	16113	;# 
   586   003EF3                     ADACQ           equ	16115	;# 
   587   003EF3                     ADACQL          equ	16115	;# 
   588   003EF4                     ADACQH          equ	16116	;# 
   589   003EF5                     ADCAP           equ	16117	;# 
   590   003EF6                     ADPRE           equ	16118	;# 
   591   003EF6                     ADPREL          equ	16118	;# 
   592   003EF7                     ADPREH          equ	16119	;# 
   593   003EF8                     ADCON0          equ	16120	;# 
   594   003EF9                     ADCON1          equ	16121	;# 
   595   003EFA                     ADCON2          equ	16122	;# 
   596   003EFB                     ADCON3          equ	16123	;# 
   597   003EFC                     ADSTAT          equ	16124	;# 
   598   003EFD                     ADREF           equ	16125	;# 
   599   003EFE                     ADACT           equ	16126	;# 
   600   003EFF                     ADCLK           equ	16127	;# 
   601   003F12                     SMT1TMR         equ	16146	;# 
   602   003F12                     SMT1TMRL        equ	16146	;# 
   603   003F13                     SMT1TMRH        equ	16147	;# 
   604   003F14                     SMT1TMRU        equ	16148	;# 
   605   003F15                     SMT1CPR         equ	16149	;# 
   606   003F15                     SMT1CPRL        equ	16149	;# 
   607   003F16                     SMT1CPRH        equ	16150	;# 
   608   003F17                     SMT1CPRU        equ	16151	;# 
   609   003F18                     SMT1CPW         equ	16152	;# 
   610   003F18                     SMT1CPWL        equ	16152	;# 
   611   003F19                     SMT1CPWH        equ	16153	;# 
   612   003F1A                     SMT1CPWU        equ	16154	;# 
   613   003F1B                     SMT1PR          equ	16155	;# 
   614   003F1B                     SMT1PRL         equ	16155	;# 
   615   003F1C                     SMT1PRH         equ	16156	;# 
   616   003F1D                     SMT1PRU         equ	16157	;# 
   617   003F1E                     SMT1CON0        equ	16158	;# 
   618   003F1F                     SMT1CON1        equ	16159	;# 
   619   003F20                     SMT1STAT        equ	16160	;# 
   620   003F21                     SMT1CLK         equ	16161	;# 
   621   003F22                     SMT1SIG         equ	16162	;# 
   622   003F23                     SMT1WIN         equ	16163	;# 
   623   003F38                     NCO1ACC         equ	16184	;# 
   624   003F38                     NCO1ACCL        equ	16184	;# 
   625   003F39                     NCO1ACCH        equ	16185	;# 
   626   003F3A                     NCO1ACCU        equ	16186	;# 
   627   003F3B                     NCO1INC         equ	16187	;# 
   628   003F3B                     NCO1INCL        equ	16187	;# 
   629   003F3C                     NCO1INCH        equ	16188	;# 
   630   003F3D                     NCO1INCU        equ	16189	;# 
   631   003F3E                     NCO1CON         equ	16190	;# 
   632   003F3F                     NCO1CLK         equ	16191	;# 
   633   003F40                     CWG3CLK         equ	16192	;# 
   634   003F40                     CWG3CLKCON      equ	16192	;# 
   635   003F41                     CWG3ISM         equ	16193	;# 
   636   003F41                     CWG3DAT         equ	16193	;# 
   637   003F42                     CWG3DBR         equ	16194	;# 
   638   003F43                     CWG3DBF         equ	16195	;# 
   639   003F44                     CWG3CON0        equ	16196	;# 
   640   003F45                     CWG3CON1        equ	16197	;# 
   641   003F46                     CWG3AS0         equ	16198	;# 
   642   003F47                     CWG3AS1         equ	16199	;# 
   643   003F48                     CWG3STR         equ	16200	;# 
   644   003F49                     CWG2CLK         equ	16201	;# 
   645   003F49                     CWG2CLKCON      equ	16201	;# 
   646   003F4A                     CWG2ISM         equ	16202	;# 
   647   003F4A                     CWG2DAT         equ	16202	;# 
   648   003F4B                     CWG2DBR         equ	16203	;# 
   649   003F4C                     CWG2DBF         equ	16204	;# 
   650   003F4D                     CWG2CON0        equ	16205	;# 
   651   003F4E                     CWG2CON1        equ	16206	;# 
   652   003F4F                     CWG2AS0         equ	16207	;# 
   653   003F50                     CWG2AS1         equ	16208	;# 
   654   003F51                     CWG2STR         equ	16209	;# 
   655   003F52                     CWG1CLK         equ	16210	;# 
   656   003F52                     CWG1CLKCON      equ	16210	;# 
   657   003F53                     CWG1ISM         equ	16211	;# 
   658   003F53                     CWG1DAT         equ	16211	;# 
   659   003F54                     CWG1DBR         equ	16212	;# 
   660   003F55                     CWG1DBF         equ	16213	;# 
   661   003F56                     CWG1CON0        equ	16214	;# 
   662   003F57                     CWG1CON1        equ	16215	;# 
   663   003F58                     CWG1AS0         equ	16216	;# 
   664   003F59                     CWG1AS1         equ	16217	;# 
   665   003F5A                     CWG1STR         equ	16218	;# 
   666   003F5E                     CCPTMRS0        equ	16222	;# 
   667   003F5F                     CCPTMRS1        equ	16223	;# 
   668   003F60                     PWM8DC          equ	16224	;# 
   669   003F60                     PWM8DCL         equ	16224	;# 
   670   003F61                     PWM8DCH         equ	16225	;# 
   671   003F62                     PWM8CON         equ	16226	;# 
   672   003F64                     PWM7DC          equ	16228	;# 
   673   003F64                     PWM7DCL         equ	16228	;# 
   674   003F65                     PWM7DCH         equ	16229	;# 
   675   003F66                     PWM7CON         equ	16230	;# 
   676   003F68                     PWM6DC          equ	16232	;# 
   677   003F68                     PWM6DCL         equ	16232	;# 
   678   003F69                     PWM6DCH         equ	16233	;# 
   679   003F6A                     PWM6CON         equ	16234	;# 
   680   003F6C                     PWM5DC          equ	16236	;# 
   681   003F6C                     PWM5DCL         equ	16236	;# 
   682   003F6D                     PWM5DCH         equ	16237	;# 
   683   003F6E                     PWM5CON         equ	16238	;# 
   684   003F70                     CCPR4           equ	16240	;# 
   685   003F70                     CCPR4L          equ	16240	;# 
   686   003F71                     CCPR4H          equ	16241	;# 
   687   003F72                     CCP4CON         equ	16242	;# 
   688   003F73                     CCP4CAP         equ	16243	;# 
   689   003F74                     CCPR3           equ	16244	;# 
   690   003F74                     CCPR3L          equ	16244	;# 
   691   003F75                     CCPR3H          equ	16245	;# 
   692   003F76                     CCP3CON         equ	16246	;# 
   693   003F77                     CCP3CAP         equ	16247	;# 
   694   003F78                     CCPR2           equ	16248	;# 
   695   003F78                     CCPR2L          equ	16248	;# 
   696   003F79                     CCPR2H          equ	16249	;# 
   697   003F7A                     CCP2CON         equ	16250	;# 
   698   003F7B                     CCP2CAP         equ	16251	;# 
   699   003F7C                     CCPR1           equ	16252	;# 
   700   003F7C                     CCPR1L          equ	16252	;# 
   701   003F7D                     CCPR1H          equ	16253	;# 
   702   003F7E                     CCP1CON         equ	16254	;# 
   703   003F7F                     CCP1CAP         equ	16255	;# 
   704   003F92                     T6TMR           equ	16274	;# 
   705   003F92                     TMR6            equ	16274	;# 
   706   003F93                     T6PR            equ	16275	;# 
   707   003F93                     PR6             equ	16275	;# 
   708   003F94                     T6CON           equ	16276	;# 
   709   003F95                     T6HLT           equ	16277	;# 
   710   003F96                     T6CLKCON        equ	16278	;# 
   711   003F96                     T6CLK           equ	16278	;# 
   712   003F97                     T6RST           equ	16279	;# 
   713   003F98                     TMR5            equ	16280	;# 
   714   003F98                     TMR5L           equ	16280	;# 
   715   003F99                     TMR5H           equ	16281	;# 
   716   003F9A                     T5CON           equ	16282	;# 
   717   003F9A                     TMR5CON         equ	16282	;# 
   718   003F9B                     T5GCON          equ	16283	;# 
   719   003F9B                     TMR5GCON        equ	16283	;# 
   720   003F9C                     T5GATE          equ	16284	;# 
   721   003F9C                     TMR5GATE        equ	16284	;# 
   722   003F9D                     T5CLK           equ	16285	;# 
   723   003F9D                     TMR5CLK         equ	16285	;# 
   724   003F9D                     PR5             equ	16285	;# 
   725   003F9E                     T4TMR           equ	16286	;# 
   726   003F9E                     TMR4            equ	16286	;# 
   727   003F9F                     T4PR            equ	16287	;# 
   728   003F9F                     PR4             equ	16287	;# 
   729   003FA0                     T4CON           equ	16288	;# 
   730   003FA1                     T4HLT           equ	16289	;# 
   731   003FA2                     T4CLKCON        equ	16290	;# 
   732   003FA2                     T4CLK           equ	16290	;# 
   733   003FA3                     T4RST           equ	16291	;# 
   734   003FA4                     TMR3            equ	16292	;# 
   735   003FA4                     TMR3L           equ	16292	;# 
   736   003FA5                     TMR3H           equ	16293	;# 
   737   003FA6                     T3CON           equ	16294	;# 
   738   003FA6                     TMR3CON         equ	16294	;# 
   739   003FA7                     T3GCON          equ	16295	;# 
   740   003FA7                     TMR3GCON        equ	16295	;# 
   741   003FA8                     T3GATE          equ	16296	;# 
   742   003FA8                     TMR3GATE        equ	16296	;# 
   743   003FA9                     T3CLK           equ	16297	;# 
   744   003FA9                     TMR3CLK         equ	16297	;# 
   745   003FA9                     PR3             equ	16297	;# 
   746   003FAA                     T2TMR           equ	16298	;# 
   747   003FAA                     TMR2            equ	16298	;# 
   748   003FAB                     T2PR            equ	16299	;# 
   749   003FAB                     PR2             equ	16299	;# 
   750   003FAC                     T2CON           equ	16300	;# 
   751   003FAD                     T2HLT           equ	16301	;# 
   752   003FAE                     T2CLKCON        equ	16302	;# 
   753   003FAE                     T2CLK           equ	16302	;# 
   754   003FAF                     T2RST           equ	16303	;# 
   755   003FB0                     TMR1            equ	16304	;# 
   756   003FB0                     TMR1L           equ	16304	;# 
   757   003FB1                     TMR1H           equ	16305	;# 
   758   003FB2                     T1CON           equ	16306	;# 
   759   003FB2                     TMR1CON         equ	16306	;# 
   760   003FB3                     T1GCON          equ	16307	;# 
   761   003FB3                     TMR1GCON        equ	16307	;# 
   762   003FB4                     T1GATE          equ	16308	;# 
   763   003FB4                     TMR1GATE        equ	16308	;# 
   764   003FB5                     T1CLK           equ	16309	;# 
   765   003FB5                     TMR1CLK         equ	16309	;# 
   766   003FB5                     PR1             equ	16309	;# 
   767   003FB6                     TMR0L           equ	16310	;# 
   768   003FB6                     TMR0            equ	16310	;# 
   769   003FB7                     TMR0H           equ	16311	;# 
   770   003FB7                     PR0             equ	16311	;# 
   771   003FB8                     T0CON0          equ	16312	;# 
   772   003FB9                     T0CON1          equ	16313	;# 
   773   003FBA                     LATA            equ	16314	;# 
   774   003FBB                     LATB            equ	16315	;# 
   775   003FBC                     LATC            equ	16316	;# 
   776   003FBD                     LATD            equ	16317	;# 
   777   003FBE                     LATE            equ	16318	;# 
   778   003FC2                     TRISA           equ	16322	;# 
   779   003FC3                     TRISB           equ	16323	;# 
   780   003FC4                     TRISC           equ	16324	;# 
   781   003FC5                     TRISD           equ	16325	;# 
   782   003FC6                     TRISE           equ	16326	;# 
   783   003FCA                     PORTA           equ	16330	;# 
   784   003FCB                     PORTB           equ	16331	;# 
   785   003FCC                     PORTC           equ	16332	;# 
   786   003FCD                     PORTD           equ	16333	;# 
   787   003FCE                     PORTE           equ	16334	;# 
   788   003FD2                     INTCON0         equ	16338	;# 
   789   003FD3                     INTCON1         equ	16339	;# 
   790   003FD4                     IVTLOCK         equ	16340	;# 
   791   003FD5                     IVTBASE         equ	16341	;# 
   792   003FD5                     IVTBASEL        equ	16341	;# 
   793   003FD6                     IVTBASEH        equ	16342	;# 
   794   003FD7                     IVTBASEU        equ	16343	;# 
   795   003FD8                     STATUS          equ	16344	;# 
   796   003FD9                     FSR2            equ	16345	;# 
   797   003FD9                     FSR2L           equ	16345	;# 
   798   003FDA                     FSR2H           equ	16346	;# 
   799   003FDB                     PLUSW2          equ	16347	;# 
   800   003FDC                     PREINC2         equ	16348	;# 
   801   003FDD                     POSTDEC2        equ	16349	;# 
   802   003FDE                     POSTINC2        equ	16350	;# 
   803   003FDF                     INDF2           equ	16351	;# 
   804   003FE0                     BSR             equ	16352	;# 
   805   003FE1                     FSR1            equ	16353	;# 
   806   003FE1                     FSR1L           equ	16353	;# 
   807   003FE2                     FSR1H           equ	16354	;# 
   808   003FE3                     PLUSW1          equ	16355	;# 
   809   003FE4                     PREINC1         equ	16356	;# 
   810   003FE5                     POSTDEC1        equ	16357	;# 
   811   003FE6                     POSTINC1        equ	16358	;# 
   812   003FE7                     INDF1           equ	16359	;# 
   813   003FE8                     WREG            equ	16360	;# 
   814   003FE9                     FSR0            equ	16361	;# 
   815   003FE9                     FSR0L           equ	16361	;# 
   816   003FEA                     FSR0H           equ	16362	;# 
   817   003FEB                     PLUSW0          equ	16363	;# 
   818   003FEC                     PREINC0         equ	16364	;# 
   819   003FED                     POSTDEC0        equ	16365	;# 
   820   003FEE                     POSTINC0        equ	16366	;# 
   821   003FEF                     INDF0           equ	16367	;# 
   822   003FF0                     PCON0           equ	16368	;# 
   823   003FF1                     PCON1           equ	16369	;# 
   824   003FF3                     PROD            equ	16371	;# 
   825   003FF3                     PRODL           equ	16371	;# 
   826   003FF4                     PRODH           equ	16372	;# 
   827   003FF5                     TABLAT          equ	16373	;# 
   828   003FF6                     TBLPTR          equ	16374	;# 
   829   003FF6                     TBLPTRL         equ	16374	;# 
   830   003FF7                     TBLPTRH         equ	16375	;# 
   831   003FF8                     TBLPTRU         equ	16376	;# 
   832   003FF9                     PCLAT           equ	16377	;# 
   833   003FF9                     PCL             equ	16377	;# 
   834   003FFA                     PCLATH          equ	16378	;# 
   835   003FFB                     PCLATU          equ	16379	;# 
   836   003FFC                     STKPTR          equ	16380	;# 
   837   003FFD                     TOS             equ	16381	;# 
   838   003FFD                     TOSL            equ	16381	;# 
   839   003FFE                     TOSH            equ	16382	;# 
   840   003FFF                     TOSU            equ	16383	;# 
   841                           
   842                           	psect	smallconst
   843   002000                     __psmallconst:
   844                           	callstack 0
   845   002000  00                 	db	0
   846   002001                     _keypad:
   847                           	callstack 0
   848   002001  31                 	db	49
   849   002002  32                 	db	50
   850   002003  33                 	db	51
   851   002004  2B                 	db	43
   852   002005  34                 	db	52
   853   002006  35                 	db	53
   854   002007  36                 	db	54
   855   002008  2D                 	db	45
   856   002009  37                 	db	55
   857   00200A  38                 	db	56
   858   00200B  39                 	db	57
   859   00200C  2A                 	db	42
   860   00200D  43                 	db	67
   861   00200E  30                 	db	48
   862   00200F  3D                 	db	61
   863   002010  2F                 	db	47
   864   002011                     __end_of_keypad:
   865                           	callstack 0
   866   002011                     _segMap:
   867                           	callstack 0
   868   002011  D7                 	db	215
   869   002012  50                 	db	80
   870   002013  CE                 	db	206
   871   002014  DC                 	db	220
   872   002015  59                 	db	89
   873   002016  9D                 	db	157
   874   002017  9F                 	db	159
   875   002018  D0                 	db	208
   876   002019  DF                 	db	223
   877   00201A  DD                 	db	221
   878   00201B                     __end_of_segMap:
   879                           	callstack 0
   880   003A40                     _ANSELA         set	14912
   881   003A60                     _ANSELC         set	14944
   882   003A70                     _ANSELD         set	14960
   883   003A50                     _ANSELB         set	14928
   884   003FCD                     _PORTDbits      set	16333
   885   003FCB                     _PORTBbits      set	16331
   886   003FBB                     _LATBbits       set	16315
   887   003FCA                     _PORTA          set	16330
   888   003FBA                     _LATA           set	16314
   889   003FC2                     _TRISA          set	16322
   890   003FBC                     _LATC           set	16316
   891   003FC4                     _TRISC          set	16324
   892   003FBD                     _LATD           set	16317
   893   003FC5                     _TRISD          set	16325
   894   003FBB                     _LATB           set	16315
   895   003FC3                     _TRISB          set	16323
   896   003FCC                     _PORTCbits      set	16332
   897   003FCA                     _PORTAbits      set	16330
   898   003FCC                     _PORTC          set	16332
   899   003FCD                     _PORTD          set	16333
   900   00201B  00                 	db	0	; dummy byte at the end
   901   002000                     __smallconst    set	__psmallconst
   902   002000                     __mediumconst   set	__psmallconst
   903   000003                     __activetblptr  equ	3
   904                           
   905                           ; #config settings
   906                           
   907                           	psect	cinit
   908   00280E                     __pcinit:
   909                           	callstack 0
   910   00280E                     start_initialization:
   911                           	callstack 0
   912   00280E                     __initialization:
   913                           	callstack 0
   914                           
   915                           ; Clear objects allocated to COMRAM (9 bytes)
   916   00280E  EE00  F013         	lfsr	0,__pbssCOMRAM
   917   002812  0E09               	movlw	9
   918   002814                     clear_0:
   919   002814  6AEE               	clrf	postinc0,c
   920   002816  06E8               	decf	wreg,f,c
   921   002818  E1FD               	bnz	clear_0
   922   00281A                     end_of_initialization:
   923                           	callstack 0
   924   00281A                     __end_of__initialization:
   925                           	callstack 0
   926   00281A  0100               	movlb	0
   927   00281C  EF0E  F010         	goto	_main	;jump to C main() function
   928                           
   929                           	psect	bssCOMRAM
   930   000013                     __pbssCOMRAM:
   931                           	callstack 0
   932   000013                     _result:
   933                           	callstack 0
   934   000013                     	ds	2
   935   000015                     _state:
   936                           	callstack 0
   937   000015                     	ds	1
   938   000016                     _operand:
   939                           	callstack 0
   940   000016                     	ds	1
   941   000017                     _current_input:
   942                           	callstack 0
   943   000017                     	ds	1
   944   000018                     _Display_Result_REG:
   945                           	callstack 0
   946   000018                     	ds	1
   947   000019                     _Operation_REG:
   948                           	callstack 0
   949   000019                     	ds	1
   950   00001A                     _Y_Input_REG:
   951                           	callstack 0
   952   00001A                     	ds	1
   953   00001B                     _X_Input_REG:
   954                           	callstack 0
   955   00001B                     	ds	1
   956                           
   957                           	psect	cstackCOMRAM
   958   000001                     __pcstackCOMRAM:
   959                           	callstack 0
   960   000001                     ?___awdiv:
   961                           	callstack 0
   962   000001                     ?___awmod:
   963                           	callstack 0
   964   000001                     ___lbdiv@divisor:
   965                           	callstack 0
   966   000001                     ___awdiv@dividend:
   967                           	callstack 0
   968   000001                     ___awmod@dividend:
   969                           	callstack 0
   970   000001                     ??_displayEE:
   971   000001                     ??_scan_keypad:
   972                           
   973                           ; 1 bytes @ 0x0
   974   000001                     	ds	1
   975   000002                     ___lbdiv@dividend:
   976                           	callstack 0
   977   000002                     
   978                           ; 1 bytes @ 0x1
   979   000002                     	ds	1
   980   000003                     ___lbdiv@counter:
   981                           	callstack 0
   982   000003                     scan_keypad@row:
   983                           	callstack 0
   984   000003                     ___awdiv@divisor:
   985                           	callstack 0
   986   000003                     ___awmod@divisor:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x2
   990   000003                     	ds	1
   991   000004                     ___lbdiv@quotient:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x3
   995   000004                     	ds	1
   996   000005                     ___awdiv@counter:
   997                           	callstack 0
   998   000005                     ___awmod@counter:
   999                           	callstack 0
  1000   000005                     ??_waitfor_key:
  1001   000005                     
  1002                           ; 1 bytes @ 0x4
  1003   000005                     	ds	1
  1004   000006                     ___awdiv@sign:
  1005                           	callstack 0
  1006   000006                     ___awmod@sign:
  1007                           	callstack 0
  1008   000006                     waitfor_key@timeout:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x5
  1012   000006                     	ds	1
  1013   000007                     ___awdiv@quotient:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x6
  1017   000007                     	ds	1
  1018   000008                     waitfor_key@key:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x7
  1022   000008                     	ds	1
  1023   000009                     display_number@result:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x8
  1027   000009                     	ds	2
  1028   00000B                     ??_display_number:
  1029                           
  1030                           ; 1 bytes @ 0xA
  1031   00000B                     	ds	2
  1032   00000D                     display_number@tens:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0xC
  1036   00000D                     	ds	1
  1037   00000E                     display_number@ones:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0xD
  1041   00000E                     	ds	1
  1042   00000F                     display_number@neg:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0xE
  1046   00000F                     	ds	1
  1047   000010                     ??_main:
  1048                           
  1049                           ; 1 bytes @ 0xF
  1050   000010                     	ds	2
  1051   000012                     main@key:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x11
  1055   000012                     	ds	1
  1056                           
  1057 ;;
  1058 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1059 ;;
  1060 ;; *************** function _main *****************
  1061 ;; Defined at:
  1062 ;;		line 62 in file "Calculator.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  key             1   17[COMRAM] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1080 ;;Total ram usage:        3 bytes
  1081 ;; Hardware stack levels required when called: 2
  1082 ;; This function calls:
  1083 ;;		_calculate_result
  1084 ;;		_display_number
  1085 ;;		_setup_keypadports
  1086 ;;		_setup_sevensegports
  1087 ;;		_waitfor_key
  1088 ;; This function is called by:
  1089 ;;		Startup code after reset
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text0
  1094   00201C                     __ptext0:
  1095                           	callstack 0
  1096   00201C                     _main:
  1097                           	callstack 29
  1098   00201C                     
  1099                           ;Calculator.c: 63:     setup_keypadports();
  1100   00201C  EC10  F014         	call	_setup_keypadports	;wreg free
  1101   002020                     
  1102                           ;Calculator.c: 64:     setup_sevensegports();
  1103   002020  ECCC  F013         	call	_setup_sevensegports	;wreg free
  1104   002024                     l1373:
  1105                           
  1106                           ;Calculator.c: 67:         char key = waitfor_key();
  1107   002024  EC68  F013         	call	_waitfor_key	;wreg free
  1108   002028  6E12               	movwf	main@key^0,c
  1109   00202A                     
  1110                           ;Calculator.c: 69:         if (key == 'C') {
  1111   00202A  0E43               	movlw	67
  1112   00202C  1812               	xorwf	main@key^0,w,c
  1113   00202E  A4D8               	btfss	status,2,c
  1114   002030  EF1C  F010         	goto	u831
  1115   002034  EF1E  F010         	goto	u830
  1116   002038                     u831:
  1117   002038  EFFA  F010         	goto	l1443
  1118   00203C                     u830:
  1119   00203C                     
  1120                           ;Calculator.c: 71:             X_Input_REG = 0;
  1121   00203C  6A1B               	clrf	_X_Input_REG^0,c
  1122                           
  1123                           ;Calculator.c: 72:             Y_Input_REG = 0;
  1124   00203E  6A1A               	clrf	_Y_Input_REG^0,c
  1125                           
  1126                           ;Calculator.c: 73:             current_input = 0;
  1127   002040  6A17               	clrf	_current_input^0,c
  1128                           
  1129                           ;Calculator.c: 74:             operand = 0;
  1130   002042  6A16               	clrf	_operand^0,c
  1131                           
  1132                           ;Calculator.c: 75:             state = 0;
  1133   002044  6A15               	clrf	_state^0,c
  1134   002046                     
  1135                           ;Calculator.c: 76:             PORTD = segMap[0];
  1136   002046  0E11               	movlw	low _segMap
  1137   002048  6EF6               	movwf	tblptrl,c
  1138   00204A                     	if	1	;There is more than 1 active tblptr byte
  1139   00204A  0E20               	movlw	high _segMap
  1140   00204C  6EF7               	movwf	tblptrh,c
  1141   00204E                     	endif
  1142   00204E                     	if	1	;There are 3 active tblptr bytes
  1143   00204E  0E00               	movlw	low (_segMap shr (0+16))
  1144   002050  6EF8               	movwf	tblptru,c
  1145   002052                     	endif
  1146   002052  0008               	tblrd		*
  1147   002054  006F FFD7 FFCD     	movff	tablat,16333	;volatile
  1148                           
  1149                           ;Calculator.c: 77:             PORTC = segMap[0];
  1150   00205A  0E11               	movlw	low _segMap
  1151   00205C  6EF6               	movwf	tblptrl,c
  1152   00205E                     	if	1	;There is more than 1 active tblptr byte
  1153   00205E  0E20               	movlw	high _segMap
  1154   002060  6EF7               	movwf	tblptrh,c
  1155   002062                     	endif
  1156   002062                     	if	1	;There are 3 active tblptr bytes
  1157   002062  0E00               	movlw	low (_segMap shr (0+16))
  1158   002064  6EF8               	movwf	tblptru,c
  1159   002066                     	endif
  1160   002066  0008               	tblrd		*
  1161   002068  006F FFD7 FFCC     	movff	tablat,16332	;volatile
  1162   00206E                     
  1163                           ;Calculator.c: 78:             PORTAbits.RA0 = PORTCbits.RC0;
  1164   00206E  A0CC               	btfss	204,0,c	;volatile
  1165   002070  D002               	bra	u845
  1166   002072  80CA               	bsf	202,0,c	;volatile
  1167   002074  D001               	bra	u847
  1168   002076                     u845:
  1169   002076  90CA               	bcf	202,0,c	;volatile
  1170   002078                     u847:
  1171   002078                     
  1172                           ;Calculator.c: 79:             PORTAbits.RA1 = PORTCbits.RC1;
  1173   002078  A2CC               	btfss	204,1,c	;volatile
  1174   00207A  D002               	bra	u855
  1175   00207C  82CA               	bsf	202,1,c	;volatile
  1176   00207E  D001               	bra	u857
  1177   002080                     u855:
  1178   002080  92CA               	bcf	202,1,c	;volatile
  1179   002082                     u857:
  1180                           
  1181                           ;Calculator.c: 80:             continue;
  1182   002082  EF12  F010         	goto	l1373
  1183   002086                     l1385:
  1184                           
  1185                           ;Calculator.c: 85:                 if (key >= '0' && key <= '9') {
  1186   002086  0E2F               	movlw	47
  1187   002088  6412               	cpfsgt	main@key^0,c
  1188   00208A  EF49  F010         	goto	u861
  1189   00208E  EF4B  F010         	goto	u860
  1190   002092                     u861:
  1191   002092  EF6C  F010         	goto	l1399
  1192   002096                     u860:
  1193   002096  0E3A               	movlw	58
  1194   002098  6012               	cpfslt	main@key^0,c
  1195   00209A  EF51  F010         	goto	u871
  1196   00209E  EF53  F010         	goto	u870
  1197   0020A2                     u871:
  1198   0020A2  EF6C  F010         	goto	l1399
  1199   0020A6                     u870:
  1200   0020A6                     
  1201                           ;Calculator.c: 86:                     current_input = current_input * 10 + (key - '0');
  1202   0020A6  5017               	movf	_current_input^0,w,c
  1203   0020A8  0D0A               	mullw	10
  1204   0020AA  50F3               	movf	243,w,c
  1205   0020AC  2412               	addwf	main@key^0,w,c
  1206   0020AE  0FD0               	addlw	208
  1207   0020B0  6E17               	movwf	_current_input^0,c
  1208   0020B2                     
  1209                           ;Calculator.c: 87:                     if (current_input > 99) current_input = 99;
  1210   0020B2  0E63               	movlw	99
  1211   0020B4  6417               	cpfsgt	_current_input^0,c
  1212   0020B6  EF5F  F010         	goto	u881
  1213   0020BA  EF61  F010         	goto	u880
  1214   0020BE                     u881:
  1215   0020BE  EF63  F010         	goto	l1395
  1216   0020C2                     u880:
  1217   0020C2  0E63               	movlw	99
  1218   0020C4  6E17               	movwf	_current_input^0,c
  1219   0020C6                     l1395:
  1220                           
  1221                           ;Calculator.c: 88:                     X_Input_REG = current_input;
  1222   0020C6  C017  F01B         	movff	_current_input,_X_Input_REG
  1223   0020CA                     
  1224                           ;Calculator.c: 89:                     display_number(X_Input_REG);
  1225   0020CA  C01B  F009         	movff	_X_Input_REG,display_number@result
  1226   0020CE  6A0A               	clrf	(display_number@result+1)^0,c
  1227   0020D0  ECE2  F011         	call	_display_number	;wreg free
  1228                           
  1229                           ;Calculator.c: 90:                 } else if (key == '+' || key == '-' || key == '*' || 
      +                          key == '/') {
  1230   0020D4  EF12  F010         	goto	l1373
  1231   0020D8                     l1399:
  1232   0020D8  0E2B               	movlw	43
  1233   0020DA  1812               	xorwf	main@key^0,w,c
  1234   0020DC  B4D8               	btfsc	status,2,c
  1235   0020DE  EF73  F010         	goto	u891
  1236   0020E2  EF75  F010         	goto	u890
  1237   0020E6                     u891:
  1238   0020E6  EF90  F010         	goto	l1407
  1239   0020EA                     u890:
  1240   0020EA  0E2D               	movlw	45
  1241   0020EC  1812               	xorwf	main@key^0,w,c
  1242   0020EE  B4D8               	btfsc	status,2,c
  1243   0020F0  EF7C  F010         	goto	u901
  1244   0020F4  EF7E  F010         	goto	u900
  1245   0020F8                     u901:
  1246   0020F8  EF90  F010         	goto	l1407
  1247   0020FC                     u900:
  1248   0020FC  0E2A               	movlw	42
  1249   0020FE  1812               	xorwf	main@key^0,w,c
  1250   002100  B4D8               	btfsc	status,2,c
  1251   002102  EF85  F010         	goto	u911
  1252   002106  EF87  F010         	goto	u910
  1253   00210A                     u911:
  1254   00210A  EF90  F010         	goto	l1407
  1255   00210E                     u910:
  1256   00210E  0E2F               	movlw	47
  1257   002110  1812               	xorwf	main@key^0,w,c
  1258   002112  A4D8               	btfss	status,2,c
  1259   002114  EF8E  F010         	goto	u921
  1260   002118  EF90  F010         	goto	u920
  1261   00211C                     u921:
  1262   00211C  EF12  F010         	goto	l1373
  1263   002120                     u920:
  1264   002120                     l1407:
  1265                           
  1266                           ;Calculator.c: 91:                     if(state == 0){
  1267   002120  5015               	movf	_state^0,w,c
  1268   002122  A4D8               	btfss	status,2,c
  1269   002124  EF96  F010         	goto	u931
  1270   002128  EF98  F010         	goto	u930
  1271   00212C                     u931:
  1272   00212C  EF09  F011         	goto	l89
  1273   002130                     u930:
  1274   002130                     
  1275                           ;Calculator.c: 92:                         operand = key;
  1276   002130  C012  F016         	movff	main@key,_operand
  1277                           
  1278                           ;Calculator.c: 93:                         Operation_REG = operand;
  1279   002134  C016  F019         	movff	_operand,_Operation_REG
  1280                           
  1281                           ;Calculator.c: 94:                         current_input = 0;
  1282   002138  6A17               	clrf	_current_input^0,c
  1283   00213A                     
  1284                           ;Calculator.c: 95:                         state = 1;
  1285   00213A  0E01               	movlw	1
  1286   00213C  6E15               	movwf	_state^0,c
  1287   00213E  EF12  F010         	goto	l1373
  1288   002142                     l1413:
  1289                           
  1290                           ;Calculator.c: 101:                 if (key >= '0' && key <= '9') {
  1291   002142  0E2F               	movlw	47
  1292   002144  6412               	cpfsgt	main@key^0,c
  1293   002146  EFA7  F010         	goto	u941
  1294   00214A  EFA9  F010         	goto	u940
  1295   00214E                     u941:
  1296   00214E  EFCA  F010         	goto	l1427
  1297   002152                     u940:
  1298   002152  0E3A               	movlw	58
  1299   002154  6012               	cpfslt	main@key^0,c
  1300   002156  EFAF  F010         	goto	u951
  1301   00215A  EFB1  F010         	goto	u950
  1302   00215E                     u951:
  1303   00215E  EFCA  F010         	goto	l1427
  1304   002162                     u950:
  1305   002162                     
  1306                           ;Calculator.c: 102:                     current_input = current_input * 10 + (key - '0')
      +                          ;
  1307   002162  5017               	movf	_current_input^0,w,c
  1308   002164  0D0A               	mullw	10
  1309   002166  50F3               	movf	243,w,c
  1310   002168  2412               	addwf	main@key^0,w,c
  1311   00216A  0FD0               	addlw	208
  1312   00216C  6E17               	movwf	_current_input^0,c
  1313   00216E                     
  1314                           ;Calculator.c: 103:                     if (current_input > 99) current_input = 99;
  1315   00216E  0E63               	movlw	99
  1316   002170  6417               	cpfsgt	_current_input^0,c
  1317   002172  EFBD  F010         	goto	u961
  1318   002176  EFBF  F010         	goto	u960
  1319   00217A                     u961:
  1320   00217A  EFC1  F010         	goto	l1423
  1321   00217E                     u960:
  1322   00217E  0E63               	movlw	99
  1323   002180  6E17               	movwf	_current_input^0,c
  1324   002182                     l1423:
  1325                           
  1326                           ;Calculator.c: 104:                     Y_Input_REG = current_input;
  1327   002182  C017  F01A         	movff	_current_input,_Y_Input_REG
  1328   002186                     
  1329                           ;Calculator.c: 105:                     display_number(Y_Input_REG);
  1330   002186  C01A  F009         	movff	_Y_Input_REG,display_number@result
  1331   00218A  6A0A               	clrf	(display_number@result+1)^0,c
  1332   00218C  ECE2  F011         	call	_display_number	;wreg free
  1333                           
  1334                           ;Calculator.c: 106:                 }
  1335   002190  EF12  F010         	goto	l1373
  1336   002194                     l1427:
  1337   002194  0E3D               	movlw	61
  1338   002196  1812               	xorwf	main@key^0,w,c
  1339   002198  A4D8               	btfss	status,2,c
  1340   00219A  EFD1  F010         	goto	u971
  1341   00219E  EFD3  F010         	goto	u970
  1342   0021A2                     u971:
  1343   0021A2  EF09  F011         	goto	l89
  1344   0021A6                     u970:
  1345   0021A6                     
  1346                           ;Calculator.c: 108:                     state = 2;
  1347   0021A6  0E02               	movlw	2
  1348   0021A8  6E15               	movwf	_state^0,c
  1349   0021AA  EF12  F010         	goto	l1373
  1350   0021AE                     l1431:
  1351                           
  1352                           ;Calculator.c: 113:                 if (key == '=') {
  1353   0021AE  0E3D               	movlw	61
  1354   0021B0  1812               	xorwf	main@key^0,w,c
  1355   0021B2  A4D8               	btfss	status,2,c
  1356   0021B4  EFDE  F010         	goto	u981
  1357   0021B8  EFE0  F010         	goto	u980
  1358   0021BC                     u981:
  1359   0021BC  EF12  F010         	goto	l1373
  1360   0021C0                     u980:
  1361   0021C0                     
  1362                           ;Calculator.c: 114:                     calculate_result();
  1363   0021C0  EC20  F013         	call	_calculate_result	;wreg free
  1364   0021C4                     
  1365                           ;Calculator.c: 115:                     result = Display_Result_REG;
  1366   0021C4  5018               	movf	_Display_Result_REG^0,w,c
  1367   0021C6  6E13               	movwf	_result^0,c
  1368   0021C8  6A14               	clrf	(_result+1)^0,c
  1369   0021CA  BE13               	btfsc	_result^0,7,c
  1370   0021CC  0614               	decf	(_result+1)^0,f,c
  1371   0021CE                     
  1372                           ;Calculator.c: 116:                     display_number(result);
  1373   0021CE  C013  F009         	movff	_result,display_number@result
  1374   0021D2  C014  F00A         	movff	_result+1,display_number@result+1
  1375   0021D6  ECE2  F011         	call	_display_number	;wreg free
  1376   0021DA                     
  1377                           ;Calculator.c: 118:                     _delay((unsigned long)((1500)*(4000000/4000.0)))
      +                          ;
  1378   0021DA  0E08               	movlw	8
  1379   0021DC  6E11               	movwf	(??_main+1)^0,c
  1380   0021DE  0E9D               	movlw	157
  1381   0021E0  6E10               	movwf	??_main^0,c
  1382   0021E2  0E06               	movlw	6
  1383   0021E4                     u997:
  1384   0021E4  2EE8               	decfsz	wreg,f,c
  1385   0021E6  D7FE               	bra	u997
  1386   0021E8  2E10               	decfsz	??_main^0,f,c
  1387   0021EA  D7FC               	bra	u997
  1388   0021EC  2E11               	decfsz	(??_main+1)^0,f,c
  1389   0021EE  D7FA               	bra	u997
  1390   0021F0  EF12  F010         	goto	l1373
  1391   0021F4                     l1443:
  1392   0021F4  5015               	movf	_state^0,w,c
  1393                           
  1394                           ; Switch size 1, requested type "simple"
  1395                           ; Number of cases is 3, Range of values is 0 to 2
  1396                           ; switch strategies available:
  1397                           ; Name         Instructions Cycles
  1398                           ; simple_byte           10     6 (average)
  1399                           ;	Chosen strategy is simple_byte
  1400   0021F6  0A00               	xorlw	0	; case 0
  1401   0021F8  B4D8               	btfsc	status,2,c
  1402   0021FA  EF43  F010         	goto	l1385
  1403   0021FE  0A01               	xorlw	1	; case 1
  1404   002200  B4D8               	btfsc	status,2,c
  1405   002202  EFA1  F010         	goto	l1413
  1406   002206  0A03               	xorlw	3	; case 2
  1407   002208  B4D8               	btfsc	status,2,c
  1408   00220A  EFD7  F010         	goto	l1431
  1409   00220E  EF12  F010         	goto	l1373
  1410   002212                     l89:
  1411   002212  EF12  F010         	goto	l1373
  1412   002216  EFFE  F0FF         	goto	start
  1413   00221A                     __end_of_main:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function _waitfor_key *****************
  1417 ;; Defined at:
  1418 ;;		line 201 in file "Calculator.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  timeout         2    5[COMRAM] int 
  1423 ;;  key             1    7[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      unsigned char 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1434 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1437 ;;Total ram usage:        4 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 1
  1440 ;; This function calls:
  1441 ;;		_scan_keypad
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text1
  1448   0026D0                     __ptext1:
  1449                           	callstack 0
  1450   0026D0                     _waitfor_key:
  1451                           	callstack 29
  1452   0026D0                     
  1453                           ;Calculator.c: 203:     int timeout = 2000;
  1454   0026D0  0E07               	movlw	7
  1455   0026D2  6E07               	movwf	(waitfor_key@timeout+1)^0,c
  1456   0026D4  0ED0               	movlw	208
  1457   0026D6  6E06               	movwf	waitfor_key@timeout^0,c
  1458                           
  1459                           ;Calculator.c: 206:     while ((key = scan_keypad()) == 0 && timeout--)
  1460   0026D8  EF72  F013         	goto	l1039
  1461   0026DC                     l1037:
  1462                           
  1463                           ;Calculator.c: 207:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1464   0026DC  0EC8               	movlw	200
  1465   0026DE                     u1007:
  1466   0026DE  D000               	nop2	
  1467   0026E0  2EE8               	decfsz	wreg,f,c
  1468   0026E2  D7FD               	bra	u1007
  1469   0026E4                     l1039:
  1470                           
  1471                           ;Calculator.c: 206:     while ((key = scan_keypad()) == 0 && timeout--)
  1472   0026E4  EC0D  F011         	call	_scan_keypad	;wreg free
  1473   0026E8  6E08               	movwf	waitfor_key@key^0,c
  1474   0026EA  5008               	movf	waitfor_key@key^0,w,c
  1475   0026EC  A4D8               	btfss	status,2,c
  1476   0026EE  EF7B  F013         	goto	u271
  1477   0026F2  EF7D  F013         	goto	u270
  1478   0026F6                     u271:
  1479   0026F6  EF8A  F013         	goto	l1043
  1480   0026FA                     u270:
  1481   0026FA  0606               	decf	waitfor_key@timeout^0,f,c
  1482   0026FC  A0D8               	btfss	status,0,c
  1483   0026FE  0607               	decf	(waitfor_key@timeout+1)^0,f,c
  1484   002700  2806               	incf	waitfor_key@timeout^0,w,c
  1485   002702  E106               	bnz	u281
  1486   002704  2807               	incf	(waitfor_key@timeout+1)^0,w,c
  1487   002706  A4D8               	btfss	status,2,c
  1488   002708  EF88  F013         	goto	u281
  1489   00270C  EF8A  F013         	goto	u280
  1490   002710                     u281:
  1491   002710  EF6E  F013         	goto	l1037
  1492   002714                     u280:
  1493   002714                     l1043:
  1494                           
  1495                           ;Calculator.c: 209:     if (key == 0) return 0;
  1496   002714  5008               	movf	waitfor_key@key^0,w,c
  1497   002716  A4D8               	btfss	status,2,c
  1498   002718  EF90  F013         	goto	u291
  1499   00271C  EF92  F013         	goto	u290
  1500   002720                     u291:
  1501   002720  EF95  F013         	goto	l1049
  1502   002724                     u290:
  1503   002724  0E00               	movlw	0
  1504   002726  EF9E  F013         	goto	l144
  1505   00272A                     l1049:
  1506                           
  1507                           ;Calculator.c: 211:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1508   00272A  0E1A               	movlw	26
  1509   00272C  6E05               	movwf	??_waitfor_key^0,c
  1510   00272E  0EF8               	movlw	248
  1511   002730                     u1017:
  1512   002730  2EE8               	decfsz	wreg,f,c
  1513   002732  D7FE               	bra	u1017
  1514   002734  2E05               	decfsz	??_waitfor_key^0,f,c
  1515   002736  D7FC               	bra	u1017
  1516   002738  D000               	nop2	
  1517   00273A                     
  1518                           ;Calculator.c: 212:     return key;
  1519   00273A  5008               	movf	waitfor_key@key^0,w,c
  1520   00273C                     l144:
  1521   00273C  0012               	return		;funcret
  1522   00273E                     __end_of_waitfor_key:
  1523                           	callstack 0
  1524                           
  1525 ;; *************** function _scan_keypad *****************
  1526 ;; Defined at:
  1527 ;;		line 173 in file "Calculator.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  row             2    2[COMRAM] int 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      unsigned char 
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1544 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1545 ;;Total ram usage:        4 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_waitfor_key
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text2
  1555   00221A                     __ptext2:
  1556                           	callstack 0
  1557   00221A                     _scan_keypad:
  1558                           	callstack 29
  1559   00221A                     
  1560                           ;Calculator.c: 176:     for (int row = 0; row < 4; row++) {
  1561   00221A  0E00               	movlw	0
  1562   00221C  6E04               	movwf	(scan_keypad@row+1)^0,c
  1563   00221E  0E00               	movlw	0
  1564   002220  6E03               	movwf	scan_keypad@row^0,c
  1565   002222                     l111:
  1566                           
  1567                           ;Calculator.c: 178:     LATBbits.LATB0 = LATBbits.LATB1 = LATBbits.LATB2 = LATBbits.LATB
      +                          3 = 0;
  1568   002222  96BB               	bcf	187,3,c	;volatile
  1569   002224  94BB               	bcf	187,2,c	;volatile
  1570   002226  92BB               	bcf	187,1,c	;volatile
  1571   002228  90BB               	bcf	187,0,c	;volatile
  1572                           
  1573                           ;Calculator.c: 181:         switch (row) {
  1574   00222A  EF23  F011         	goto	l851
  1575   00222E                     l114:
  1576   00222E  80BB               	bsf	187,0,c	;volatile
  1577   002230  EF41  F011         	goto	l853
  1578   002234                     l116:
  1579   002234  82BB               	bsf	187,1,c	;volatile
  1580   002236  EF41  F011         	goto	l853
  1581   00223A                     l117:
  1582   00223A  84BB               	bsf	187,2,c	;volatile
  1583   00223C  EF41  F011         	goto	l853
  1584   002240                     l118:
  1585   002240  86BB               	bsf	187,3,c	;volatile
  1586   002242  EF41  F011         	goto	l853
  1587   002246                     l851:
  1588   002246  C003  F001         	movff	scan_keypad@row,??_scan_keypad
  1589   00224A  C004  F002         	movff	scan_keypad@row+1,??_scan_keypad+1
  1590                           
  1591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1592                           ; Switch size 1, requested type "simple"
  1593                           ; Number of cases is 1, Range of values is 0 to 0
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte            4     3 (average)
  1597                           ;	Chosen strategy is simple_byte
  1598   00224E  5002               	movf	(??_scan_keypad+1)^0,w,c
  1599   002250  0A00               	xorlw	0	; case 0
  1600   002252  B4D8               	btfsc	status,2,c
  1601   002254  EF2E  F011         	goto	l1465
  1602   002258  EF41  F011         	goto	l853
  1603   00225C                     l1465:
  1604                           
  1605                           ; Switch size 1, requested type "simple"
  1606                           ; Number of cases is 4, Range of values is 0 to 3
  1607                           ; switch strategies available:
  1608                           ; Name         Instructions Cycles
  1609                           ; simple_byte           13     7 (average)
  1610                           ;	Chosen strategy is simple_byte
  1611   00225C  5001               	movf	??_scan_keypad^0,w,c
  1612   00225E  0A00               	xorlw	0	; case 0
  1613   002260  B4D8               	btfsc	status,2,c
  1614   002262  EF17  F011         	goto	l114
  1615   002266  0A01               	xorlw	1	; case 1
  1616   002268  B4D8               	btfsc	status,2,c
  1617   00226A  EF1A  F011         	goto	l116
  1618   00226E  0A03               	xorlw	3	; case 2
  1619   002270  B4D8               	btfsc	status,2,c
  1620   002272  EF1D  F011         	goto	l117
  1621   002276  0A01               	xorlw	1	; case 3
  1622   002278  B4D8               	btfsc	status,2,c
  1623   00227A  EF20  F011         	goto	l118
  1624   00227E  EF41  F011         	goto	l853
  1625   002282                     l853:
  1626                           
  1627                           ;Calculator.c: 188:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1628   002282  0E07               	movlw	7
  1629   002284  6E01               	movwf	??_scan_keypad^0,c
  1630   002286  0E7D               	movlw	125
  1631   002288                     u1027:
  1632   002288  2EE8               	decfsz	wreg,f,c
  1633   00228A  D7FE               	bra	u1027
  1634   00228C  2E01               	decfsz	??_scan_keypad^0,f,c
  1635   00228E  D7FC               	bra	u1027
  1636   002290  0000               	nop	
  1637   002292                     
  1638                           ;Calculator.c: 190:         if (PORTBbits.RB4 == 1) { while (PORTBbits.RB4 == 1); return
      +                           keypad[row][0]; }
  1639   002292  A8CB               	btfss	203,4,c	;volatile
  1640   002294  EF4E  F011         	goto	u11
  1641   002298  EF50  F011         	goto	u10
  1642   00229C                     u11:
  1643   00229C  EF67  F011         	goto	l119
  1644   0022A0                     u10:
  1645   0022A0                     l120:
  1646   0022A0  B8CB               	btfsc	203,4,c	;volatile
  1647   0022A2  EF55  F011         	goto	u21
  1648   0022A6  EF57  F011         	goto	u20
  1649   0022AA                     u21:
  1650   0022AA  EF50  F011         	goto	l120
  1651   0022AE                     u20:
  1652   0022AE  5003               	movf	scan_keypad@row^0,w,c
  1653   0022B0  0D04               	mullw	4
  1654   0022B2  50F3               	movf	243,w,c
  1655   0022B4  0F01               	addlw	low _keypad
  1656   0022B6  6E01               	movwf	??_scan_keypad^0,c
  1657   0022B8  0060  F007  FFF6   	movff	??_scan_keypad,tblptrl
  1658   0022BE                     	if	1	;There is more than 1 active tblptr byte
  1659   0022BE  0E20               	movlw	high __smallconst
  1660   0022C0  6EF7               	movwf	tblptrh,c
  1661   0022C2                     	endif
  1662   0022C2                     	if	0	;tblptru may be non-zero
  1663   0022C2                     	endif
  1664   0022C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1665   0022C2  0E00               	movlw	low (__smallconst shr (0+16))
  1666   0022C4  6EF8               	movwf	tblptru,c
  1667   0022C6                     	endif
  1668   0022C6  0008               	tblrd		*
  1669   0022C8  50F5               	movf	tablat,w,c
  1670   0022CA  EFE1  F011         	goto	l123
  1671   0022CE                     l119:
  1672                           
  1673                           ;Calculator.c: 191:         if (PORTBbits.RB5 == 1) { while (PORTBbits.RB5 == 1); return
      +                           keypad[row][1]; }
  1674   0022CE  AACB               	btfss	203,5,c	;volatile
  1675   0022D0  EF6C  F011         	goto	u31
  1676   0022D4  EF6E  F011         	goto	u30
  1677   0022D8                     u31:
  1678   0022D8  EF8A  F011         	goto	l124
  1679   0022DC                     u30:
  1680   0022DC                     l125:
  1681   0022DC  BACB               	btfsc	203,5,c	;volatile
  1682   0022DE  EF73  F011         	goto	u41
  1683   0022E2  EF75  F011         	goto	u40
  1684   0022E6                     u41:
  1685   0022E6  EF6E  F011         	goto	l125
  1686   0022EA                     u40:
  1687   0022EA  5003               	movf	scan_keypad@row^0,w,c
  1688   0022EC  0D04               	mullw	4
  1689   0022EE  006F FFCC  F001    	movff	prodl,??_scan_keypad
  1690   0022F4  0E01               	movlw	1
  1691   0022F6  2601               	addwf	??_scan_keypad^0,f,c
  1692   0022F8  5001               	movf	??_scan_keypad^0,w,c
  1693   0022FA  0F01               	addlw	low _keypad
  1694   0022FC  6E02               	movwf	(??_scan_keypad+1)^0,c
  1695   0022FE  0060  F00B  FFF6   	movff	??_scan_keypad+1,tblptrl
  1696   002304                     	if	1	;There is more than 1 active tblptr byte
  1697   002304  0E20               	movlw	high __smallconst
  1698   002306  6EF7               	movwf	tblptrh,c
  1699   002308                     	endif
  1700   002308                     	if	0	;tblptru may be non-zero
  1701   002308                     	endif
  1702   002308                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1703   002308  0E00               	movlw	low (__smallconst shr (0+16))
  1704   00230A  6EF8               	movwf	tblptru,c
  1705   00230C                     	endif
  1706   00230C  0008               	tblrd		*
  1707   00230E  50F5               	movf	tablat,w,c
  1708   002310  EFE1  F011         	goto	l123
  1709   002314                     l124:
  1710                           
  1711                           ;Calculator.c: 192:         if (PORTBbits.RB6 == 1) { while (PORTBbits.RB6 == 1); return
      +                           keypad[row][2]; }
  1712   002314  ACCB               	btfss	203,6,c	;volatile
  1713   002316  EF8F  F011         	goto	u51
  1714   00231A  EF91  F011         	goto	u50
  1715   00231E                     u51:
  1716   00231E  EFAD  F011         	goto	l128
  1717   002322                     u50:
  1718   002322                     l129:
  1719   002322  BCCB               	btfsc	203,6,c	;volatile
  1720   002324  EF96  F011         	goto	u61
  1721   002328  EF98  F011         	goto	u60
  1722   00232C                     u61:
  1723   00232C  EF91  F011         	goto	l129
  1724   002330                     u60:
  1725   002330  5003               	movf	scan_keypad@row^0,w,c
  1726   002332  0D04               	mullw	4
  1727   002334  006F FFCC  F001    	movff	prodl,??_scan_keypad
  1728   00233A  0E02               	movlw	2
  1729   00233C  2601               	addwf	??_scan_keypad^0,f,c
  1730   00233E  5001               	movf	??_scan_keypad^0,w,c
  1731   002340  0F01               	addlw	low _keypad
  1732   002342  6E02               	movwf	(??_scan_keypad+1)^0,c
  1733   002344  0060  F00B  FFF6   	movff	??_scan_keypad+1,tblptrl
  1734   00234A                     	if	1	;There is more than 1 active tblptr byte
  1735   00234A  0E20               	movlw	high __smallconst
  1736   00234C  6EF7               	movwf	tblptrh,c
  1737   00234E                     	endif
  1738   00234E                     	if	0	;tblptru may be non-zero
  1739   00234E                     	endif
  1740   00234E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1741   00234E  0E00               	movlw	low (__smallconst shr (0+16))
  1742   002350  6EF8               	movwf	tblptru,c
  1743   002352                     	endif
  1744   002352  0008               	tblrd		*
  1745   002354  50F5               	movf	tablat,w,c
  1746   002356  EFE1  F011         	goto	l123
  1747   00235A                     l128:
  1748                           
  1749                           ;Calculator.c: 193:         if (PORTBbits.RB7 == 1) { while (PORTBbits.RB7 == 1); return
      +                           keypad[row][3]; }
  1750   00235A  AECB               	btfss	203,7,c	;volatile
  1751   00235C  EFB2  F011         	goto	u71
  1752   002360  EFB4  F011         	goto	u70
  1753   002364                     u71:
  1754   002364  EFD0  F011         	goto	l881
  1755   002368                     u70:
  1756   002368                     l133:
  1757   002368  BECB               	btfsc	203,7,c	;volatile
  1758   00236A  EFB9  F011         	goto	u81
  1759   00236E  EFBB  F011         	goto	u80
  1760   002372                     u81:
  1761   002372  EFB4  F011         	goto	l133
  1762   002376                     u80:
  1763   002376  5003               	movf	scan_keypad@row^0,w,c
  1764   002378  0D04               	mullw	4
  1765   00237A  006F FFCC  F001    	movff	prodl,??_scan_keypad
  1766   002380  0E03               	movlw	3
  1767   002382  2601               	addwf	??_scan_keypad^0,f,c
  1768   002384  5001               	movf	??_scan_keypad^0,w,c
  1769   002386  0F01               	addlw	low _keypad
  1770   002388  6E02               	movwf	(??_scan_keypad+1)^0,c
  1771   00238A  0060  F00B  FFF6   	movff	??_scan_keypad+1,tblptrl
  1772   002390                     	if	1	;There is more than 1 active tblptr byte
  1773   002390  0E20               	movlw	high __smallconst
  1774   002392  6EF7               	movwf	tblptrh,c
  1775   002394                     	endif
  1776   002394                     	if	0	;tblptru may be non-zero
  1777   002394                     	endif
  1778   002394                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1779   002394  0E00               	movlw	low (__smallconst shr (0+16))
  1780   002396  6EF8               	movwf	tblptru,c
  1781   002398                     	endif
  1782   002398  0008               	tblrd		*
  1783   00239A  50F5               	movf	tablat,w,c
  1784   00239C  EFE1  F011         	goto	l123
  1785   0023A0                     l881:
  1786                           
  1787                           ;Calculator.c: 194:     }
  1788   0023A0  4A03               	infsnz	scan_keypad@row^0,f,c
  1789   0023A2  2A04               	incf	(scan_keypad@row+1)^0,f,c
  1790   0023A4  BE04               	btfsc	(scan_keypad@row+1)^0,7,c
  1791   0023A6  EFDE  F011         	goto	u91
  1792   0023AA  5004               	movf	(scan_keypad@row+1)^0,w,c
  1793   0023AC  E109               	bnz	u90
  1794   0023AE  0E04               	movlw	4
  1795   0023B0  5C03               	subwf	scan_keypad@row^0,w,c
  1796   0023B2  A0D8               	btfss	status,0,c
  1797   0023B4  EFDE  F011         	goto	u91
  1798   0023B8  EFE0  F011         	goto	u90
  1799   0023BC                     u91:
  1800   0023BC  EF11  F011         	goto	l111
  1801   0023C0                     u90:
  1802   0023C0                     
  1803                           ;Calculator.c: 196:     return 0;
  1804   0023C0  0E00               	movlw	0
  1805   0023C2                     l123:
  1806   0023C2  0012               	return		;funcret
  1807   0023C4                     __end_of_scan_keypad:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _setup_sevensegports *****************
  1811 ;; Defined at:
  1812 ;;		line 153 in file "Calculator.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text3
  1840   002798                     __ptext3:
  1841                           	callstack 0
  1842   002798                     _setup_sevensegports:
  1843                           	callstack 30
  1844   002798                     
  1845                           ;Calculator.c: 154:     TRISD = 0x00;
  1846   002798  6AC5               	clrf	197,c	;volatile
  1847                           
  1848                           ;Calculator.c: 155:     LATD = 0x00;
  1849   00279A  6ABD               	clrf	189,c	;volatile
  1850   00279C                     
  1851                           ;Calculator.c: 156:     PORTD = segMap[0];
  1852   00279C  0E11               	movlw	low _segMap
  1853   00279E  6EF6               	movwf	tblptrl,c
  1854   0027A0                     	if	1	;There is more than 1 active tblptr byte
  1855   0027A0  0E20               	movlw	high _segMap
  1856   0027A2  6EF7               	movwf	tblptrh,c
  1857   0027A4                     	endif
  1858   0027A4                     	if	1	;There are 3 active tblptr bytes
  1859   0027A4  0E00               	movlw	low (_segMap shr (0+16))
  1860   0027A6  6EF8               	movwf	tblptru,c
  1861   0027A8                     	endif
  1862   0027A8  0008               	tblrd		*
  1863   0027AA  006F FFD7 FFCD     	movff	tablat,16333	;volatile
  1864   0027B0                     
  1865                           ;Calculator.c: 157:     ANSELD = 0x00;
  1866   0027B0  013A               	movlb	58	; () banked
  1867   0027B2  6B70               	clrf	112,b	;volatile
  1868   0027B4                     
  1869                           ; BSR set to: 58
  1870                           ;Calculator.c: 159:     TRISC = 0x00;
  1871   0027B4  6AC4               	clrf	196,c	;volatile
  1872   0027B6                     
  1873                           ; BSR set to: 58
  1874                           ;Calculator.c: 160:     LATC = 0x00;
  1875   0027B6  6ABC               	clrf	188,c	;volatile
  1876                           
  1877                           ;Calculator.c: 161:     PORTC = segMap[0];
  1878   0027B8  0E11               	movlw	low _segMap
  1879   0027BA  6EF6               	movwf	tblptrl,c
  1880   0027BC                     	if	1	;There is more than 1 active tblptr byte
  1881   0027BC  0E20               	movlw	high _segMap
  1882   0027BE  6EF7               	movwf	tblptrh,c
  1883   0027C0                     	endif
  1884   0027C0                     	if	1	;There are 3 active tblptr bytes
  1885   0027C0  0E00               	movlw	low (_segMap shr (0+16))
  1886   0027C2  6EF8               	movwf	tblptru,c
  1887   0027C4                     	endif
  1888   0027C4  0008               	tblrd		*
  1889   0027C6  006F FFD7 FFCC     	movff	tablat,16332	;volatile
  1890   0027CC                     
  1891                           ; BSR set to: 58
  1892                           ;Calculator.c: 162:     ANSELC = 0x00;
  1893   0027CC  6B60               	clrf	96,b	;volatile
  1894   0027CE                     
  1895                           ; BSR set to: 58
  1896                           ;Calculator.c: 164:     TRISA = 0x00;
  1897   0027CE  6AC2               	clrf	194,c	;volatile
  1898   0027D0                     
  1899                           ; BSR set to: 58
  1900                           ;Calculator.c: 165:     LATA = 0x00;
  1901   0027D0  6ABA               	clrf	186,c	;volatile
  1902   0027D2                     
  1903                           ; BSR set to: 58
  1904                           ;Calculator.c: 166:     PORTA = 0b00000011;
  1905   0027D2  0E03               	movlw	3
  1906   0027D4  6ECA               	movwf	202,c	;volatile
  1907   0027D6                     
  1908                           ; BSR set to: 58
  1909                           ;Calculator.c: 167:     ANSELA = 0x00;
  1910   0027D6  6B40               	clrf	64,b	;volatile
  1911   0027D8                     
  1912                           ; BSR set to: 58
  1913   0027D8  0012               	return		;funcret
  1914   0027DA                     __end_of_setup_sevensegports:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _setup_keypadports *****************
  1918 ;; Defined at:
  1919 ;;		line 147 in file "Calculator.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text4
  1947   002820                     __ptext4:
  1948                           	callstack 0
  1949   002820                     _setup_keypadports:
  1950                           	callstack 30
  1951   002820                     
  1952                           ;Calculator.c: 148:     TRISB = 0b11110000;
  1953   002820  0EF0               	movlw	240
  1954   002822  6EC3               	movwf	195,c	;volatile
  1955   002824                     
  1956                           ;Calculator.c: 149:     LATB = 0x00;
  1957   002824  6ABB               	clrf	187,c	;volatile
  1958   002826                     
  1959                           ;Calculator.c: 150:     ANSELB = 0x00;
  1960   002826  013A               	movlb	58	; () banked
  1961   002828  6B50               	clrf	80,b	;volatile
  1962   00282A                     
  1963                           ; BSR set to: 58
  1964   00282A  0012               	return		;funcret
  1965   00282C                     __end_of_setup_keypadports:
  1966                           	callstack 0
  1967                           
  1968 ;; *************** function _display_number *****************
  1969 ;; Defined at:
  1970 ;;		line 254 in file "Calculator.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  result          2    8[COMRAM] int 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  neg             1   14[COMRAM] _Bool 
  1975 ;;  ones            1   13[COMRAM] unsigned char 
  1976 ;;  tens            1   12[COMRAM] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1987 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1989 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1990 ;;Total ram usage:        7 bytes
  1991 ;; Hardware stack levels used: 1
  1992 ;; Hardware stack levels required when called: 1
  1993 ;; This function calls:
  1994 ;;		___awdiv
  1995 ;;		___awmod
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text5
  2002   0023C4                     __ptext5:
  2003                           	callstack 0
  2004   0023C4                     _display_number:
  2005                           	callstack 29
  2006   0023C4                     
  2007                           ;Calculator.c: 255:     if (result > 99) result = 99;
  2008   0023C4  BE0A               	btfsc	(display_number@result+1)^0,7,c
  2009   0023C6  EFEE  F011         	goto	u721
  2010   0023CA  500A               	movf	(display_number@result+1)^0,w,c
  2011   0023CC  E109               	bnz	u720
  2012   0023CE  0E64               	movlw	100
  2013   0023D0  5C09               	subwf	display_number@result^0,w,c
  2014   0023D2  A0D8               	btfss	status,0,c
  2015   0023D4  EFEE  F011         	goto	u721
  2016   0023D8  EFF0  F011         	goto	u720
  2017   0023DC                     u721:
  2018   0023DC  EFF4  F011         	goto	l1317
  2019   0023E0                     u720:
  2020   0023E0  0E00               	movlw	0
  2021   0023E2  6E0A               	movwf	(display_number@result+1)^0,c
  2022   0023E4  0E63               	movlw	99
  2023   0023E6  6E09               	movwf	display_number@result^0,c
  2024   0023E8                     l1317:
  2025                           
  2026                           ;Calculator.c: 256:     if (result < -99) result = 99;
  2027   0023E8  AE0A               	btfss	(display_number@result+1)^0,7,c
  2028   0023EA  EF00  F012         	goto	u731
  2029   0023EE  0E9D               	movlw	157
  2030   0023F0  5C09               	subwf	display_number@result^0,w,c
  2031   0023F2  0EFF               	movlw	255
  2032   0023F4  580A               	subwfb	(display_number@result+1)^0,w,c
  2033   0023F6  B0D8               	btfsc	status,0,c
  2034   0023F8  EF00  F012         	goto	u731
  2035   0023FC  EF02  F012         	goto	u730
  2036   002400                     u731:
  2037   002400  EF06  F012         	goto	l1321
  2038   002404                     u730:
  2039   002404  0E00               	movlw	0
  2040   002406  6E0A               	movwf	(display_number@result+1)^0,c
  2041   002408  0E63               	movlw	99
  2042   00240A  6E09               	movwf	display_number@result^0,c
  2043   00240C                     l1321:
  2044                           
  2045                           ;Calculator.c: 257:     _Bool neg = 0;
  2046   00240C  6A0F               	clrf	display_number@neg^0,c
  2047   00240E                     
  2048                           ;Calculator.c: 259:     if(result < 0) {
  2049   00240E  BE0A               	btfsc	(display_number@result+1)^0,7,c
  2050   002410  EF0E  F012         	goto	u740
  2051   002414  EF0C  F012         	goto	u741
  2052   002418                     u741:
  2053   002418  EF14  F012         	goto	l1329
  2054   00241C                     u740:
  2055   00241C                     
  2056                           ;Calculator.c: 260:         result =(~result)+1;
  2057   00241C  6C09               	negf	display_number@result^0,c
  2058   00241E  1E0A               	comf	(display_number@result+1)^0,f,c
  2059   002420  B0D8               	btfsc	status,0,c
  2060   002422  2A0A               	incf	(display_number@result+1)^0,f,c
  2061   002424                     
  2062                           ;Calculator.c: 261:         neg = 1;
  2063   002424  0E01               	movlw	1
  2064   002426  6E0F               	movwf	display_number@neg^0,c
  2065   002428                     l1329:
  2066                           
  2067                           ;Calculator.c: 265:     unsigned char tens = result / 10;
  2068   002428  C009  F001         	movff	display_number@result,___awdiv@dividend
  2069   00242C  C00A  F002         	movff	display_number@result+1,___awdiv@dividend+1
  2070   002430  0E00               	movlw	0
  2071   002432  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2072   002434  0E0A               	movlw	10
  2073   002436  6E03               	movwf	___awdiv@divisor^0,c
  2074   002438  EC68  F012         	call	___awdiv	;wreg free
  2075   00243C  5001               	movf	?___awdiv^0,w,c
  2076   00243E  6E0D               	movwf	display_number@tens^0,c
  2077   002440                     
  2078                           ;Calculator.c: 266:     unsigned char ones = result % 10;
  2079   002440  C009  F001         	movff	display_number@result,___awmod@dividend
  2080   002444  C00A  F002         	movff	display_number@result+1,___awmod@dividend+1
  2081   002448  0E00               	movlw	0
  2082   00244A  6E04               	movwf	(___awmod@divisor+1)^0,c
  2083   00244C  0E0A               	movlw	10
  2084   00244E  6E03               	movwf	___awmod@divisor^0,c
  2085   002450  ECC9  F012         	call	___awmod	;wreg free
  2086   002454  5001               	movf	?___awmod^0,w,c
  2087   002456  6E0E               	movwf	display_number@ones^0,c
  2088   002458                     
  2089                           ;Calculator.c: 270:     PORTD = segMap[tens];
  2090   002458  500D               	movf	display_number@tens^0,w,c
  2091   00245A  0F11               	addlw	low _segMap
  2092   00245C  6E0B               	movwf	??_display_number^0,c
  2093   00245E  0060  F02F  FFF6   	movff	??_display_number,tblptrl
  2094   002464                     	if	1	;There is more than 1 active tblptr byte
  2095   002464  0E20               	movlw	high __smallconst
  2096   002466  6EF7               	movwf	tblptrh,c
  2097   002468                     	endif
  2098   002468                     	if	0	;tblptru may be non-zero
  2099   002468                     	endif
  2100   002468                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2101   002468  0E00               	movlw	low (__smallconst shr (0+16))
  2102   00246A  6EF8               	movwf	tblptru,c
  2103   00246C                     	endif
  2104   00246C  0008               	tblrd		*
  2105   00246E  006F FFD7 FFCD     	movff	tablat,16333	;volatile
  2106   002474                     
  2107                           ;Calculator.c: 271:     if (neg == 1){
  2108   002474  040F               	decf	display_number@neg^0,w,c
  2109   002476  A4D8               	btfss	status,2,c
  2110   002478  EF40  F012         	goto	u751
  2111   00247C  EF42  F012         	goto	u750
  2112   002480                     u751:
  2113   002480  EF43  F012         	goto	l1339
  2114   002484                     u750:
  2115   002484                     
  2116                           ;Calculator.c: 272:     PORTDbits.RD5 = 1;
  2117   002484  8ACD               	bsf	205,5,c	;volatile
  2118   002486                     l1339:
  2119                           
  2120                           ;Calculator.c: 277:     PORTC = segMap[ones];
  2121   002486  500E               	movf	display_number@ones^0,w,c
  2122   002488  0F11               	addlw	low _segMap
  2123   00248A  6E0B               	movwf	??_display_number^0,c
  2124   00248C  0060  F02F  FFF6   	movff	??_display_number,tblptrl
  2125   002492                     	if	1	;There is more than 1 active tblptr byte
  2126   002492  0E20               	movlw	high __smallconst
  2127   002494  6EF7               	movwf	tblptrh,c
  2128   002496                     	endif
  2129   002496                     	if	0	;tblptru may be non-zero
  2130   002496                     	endif
  2131   002496                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2132   002496  0E00               	movlw	low (__smallconst shr (0+16))
  2133   002498  6EF8               	movwf	tblptru,c
  2134   00249A                     	endif
  2135   00249A  0008               	tblrd		*
  2136   00249C  006F FFD7 FFCC     	movff	tablat,16332	;volatile
  2137   0024A2                     
  2138                           ;Calculator.c: 278:     PORTAbits.RA0 = PORTCbits.RC0;
  2139   0024A2  A0CC               	btfss	204,0,c	;volatile
  2140   0024A4  D002               	bra	u765
  2141   0024A6  80CA               	bsf	202,0,c	;volatile
  2142   0024A8  D001               	bra	u767
  2143   0024AA                     u765:
  2144   0024AA  90CA               	bcf	202,0,c	;volatile
  2145   0024AC                     u767:
  2146   0024AC                     
  2147                           ;Calculator.c: 279:     PORTAbits.RA1 = PORTCbits.RC1;
  2148   0024AC  A2CC               	btfss	204,1,c	;volatile
  2149   0024AE  D002               	bra	u775
  2150   0024B0  82CA               	bsf	202,1,c	;volatile
  2151   0024B2  D001               	bra	u777
  2152   0024B4                     u775:
  2153   0024B4  92CA               	bcf	202,1,c	;volatile
  2154   0024B6                     u777:
  2155   0024B6                     
  2156                           ;Calculator.c: 281:     _delay((unsigned long)((200)*(4000000/4000.0)));
  2157   0024B6  0E02               	movlw	2
  2158   0024B8  6E0C               	movwf	(??_display_number+1)^0,c
  2159   0024BA  0E04               	movlw	4
  2160   0024BC  6E0B               	movwf	??_display_number^0,c
  2161   0024BE  0EBA               	movlw	186
  2162   0024C0                     u1037:
  2163   0024C0  2EE8               	decfsz	wreg,f,c
  2164   0024C2  D7FE               	bra	u1037
  2165   0024C4  2E0B               	decfsz	??_display_number^0,f,c
  2166   0024C6  D7FC               	bra	u1037
  2167   0024C8  2E0C               	decfsz	(??_display_number+1)^0,f,c
  2168   0024CA  D7FA               	bra	u1037
  2169   0024CC  D000               	nop2	
  2170   0024CE  0012               	return		;funcret
  2171   0024D0                     __end_of_display_number:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function ___awmod *****************
  2175 ;; Defined at:
  2176 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  dividend        2    0[COMRAM] int 
  2179 ;;  divisor         2    2[COMRAM] int 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  sign            1    5[COMRAM] unsigned char 
  2182 ;;  counter         1    4[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2    0[COMRAM] int 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2196 ;;Total ram usage:        6 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_display_number
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text6
  2206   002592                     __ptext6:
  2207                           	callstack 0
  2208   002592                     ___awmod:
  2209                           	callstack 29
  2210   002592  6A06               	clrf	___awmod@sign^0,c
  2211   002594  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2212   002596  EFD1  F012         	goto	u630
  2213   00259A  EFCF  F012         	goto	u631
  2214   00259E                     u631:
  2215   00259E  EFD7  F012         	goto	l1259
  2216   0025A2                     u630:
  2217   0025A2  6C01               	negf	___awmod@dividend^0,c
  2218   0025A4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2219   0025A6  B0D8               	btfsc	status,0,c
  2220   0025A8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2221   0025AA  0E01               	movlw	1
  2222   0025AC  6E06               	movwf	___awmod@sign^0,c
  2223   0025AE                     l1259:
  2224   0025AE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2225   0025B0  EFDE  F012         	goto	u640
  2226   0025B4  EFDC  F012         	goto	u641
  2227   0025B8                     u641:
  2228   0025B8  EFE2  F012         	goto	l1263
  2229   0025BC                     u640:
  2230   0025BC  6C03               	negf	___awmod@divisor^0,c
  2231   0025BE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2232   0025C0  B0D8               	btfsc	status,0,c
  2233   0025C2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2234   0025C4                     l1263:
  2235   0025C4  5003               	movf	___awmod@divisor^0,w,c
  2236   0025C6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2237   0025C8  B4D8               	btfsc	status,2,c
  2238   0025CA  EFE9  F012         	goto	u651
  2239   0025CE  EFEB  F012         	goto	u650
  2240   0025D2                     u651:
  2241   0025D2  EF0F  F013         	goto	l1279
  2242   0025D6                     u650:
  2243   0025D6  0E01               	movlw	1
  2244   0025D8  6E05               	movwf	___awmod@counter^0,c
  2245   0025DA  EFF3  F012         	goto	l1269
  2246   0025DE                     l1267:
  2247   0025DE  90D8               	bcf	status,0,c
  2248   0025E0  3603               	rlcf	___awmod@divisor^0,f,c
  2249   0025E2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2250   0025E4  2A05               	incf	___awmod@counter^0,f,c
  2251   0025E6                     l1269:
  2252   0025E6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2253   0025E8  EFF8  F012         	goto	u661
  2254   0025EC  EFFA  F012         	goto	u660
  2255   0025F0                     u661:
  2256   0025F0  EFEF  F012         	goto	l1267
  2257   0025F4                     u660:
  2258   0025F4                     l1271:
  2259   0025F4  5003               	movf	___awmod@divisor^0,w,c
  2260   0025F6  5C01               	subwf	___awmod@dividend^0,w,c
  2261   0025F8  5004               	movf	(___awmod@divisor+1)^0,w,c
  2262   0025FA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2263   0025FC  A0D8               	btfss	status,0,c
  2264   0025FE  EF03  F013         	goto	u671
  2265   002602  EF05  F013         	goto	u670
  2266   002606                     u671:
  2267   002606  EF09  F013         	goto	l1275
  2268   00260A                     u670:
  2269   00260A  5003               	movf	___awmod@divisor^0,w,c
  2270   00260C  5E01               	subwf	___awmod@dividend^0,f,c
  2271   00260E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2272   002610  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2273   002612                     l1275:
  2274   002612  90D8               	bcf	status,0,c
  2275   002614  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2276   002616  3203               	rrcf	___awmod@divisor^0,f,c
  2277   002618  2E05               	decfsz	___awmod@counter^0,f,c
  2278   00261A  EFFA  F012         	goto	l1271
  2279   00261E                     l1279:
  2280   00261E  5006               	movf	___awmod@sign^0,w,c
  2281   002620  B4D8               	btfsc	status,2,c
  2282   002622  EF15  F013         	goto	u681
  2283   002626  EF17  F013         	goto	u680
  2284   00262A                     u681:
  2285   00262A  EF1B  F013         	goto	l1283
  2286   00262E                     u680:
  2287   00262E  6C01               	negf	___awmod@dividend^0,c
  2288   002630  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2289   002632  B0D8               	btfsc	status,0,c
  2290   002634  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2291   002636                     l1283:
  2292   002636  C001  F001         	movff	___awmod@dividend,?___awmod
  2293   00263A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2294   00263E  0012               	return		;funcret
  2295   002640                     __end_of___awmod:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function ___awdiv *****************
  2299 ;; Defined at:
  2300 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  dividend        2    0[COMRAM] int 
  2303 ;;  divisor         2    2[COMRAM] int 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  quotient        2    6[COMRAM] int 
  2306 ;;  sign            1    5[COMRAM] unsigned char 
  2307 ;;  counter         1    4[COMRAM] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  2    0[COMRAM] int 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2318 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2321 ;;Total ram usage:        8 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_display_number
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text7
  2331   0024D0                     __ptext7:
  2332                           	callstack 0
  2333   0024D0                     ___awdiv:
  2334                           	callstack 29
  2335   0024D0  6A06               	clrf	___awdiv@sign^0,c
  2336   0024D2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2337   0024D4  EF70  F012         	goto	u570
  2338   0024D8  EF6E  F012         	goto	u571
  2339   0024DC                     u571:
  2340   0024DC  EF76  F012         	goto	l1215
  2341   0024E0                     u570:
  2342   0024E0  6C03               	negf	___awdiv@divisor^0,c
  2343   0024E2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2344   0024E4  B0D8               	btfsc	status,0,c
  2345   0024E6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2346   0024E8  0E01               	movlw	1
  2347   0024EA  6E06               	movwf	___awdiv@sign^0,c
  2348   0024EC                     l1215:
  2349   0024EC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2350   0024EE  EF7D  F012         	goto	u580
  2351   0024F2  EF7B  F012         	goto	u581
  2352   0024F6                     u581:
  2353   0024F6  EF83  F012         	goto	l1221
  2354   0024FA                     u580:
  2355   0024FA  6C01               	negf	___awdiv@dividend^0,c
  2356   0024FC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2357   0024FE  B0D8               	btfsc	status,0,c
  2358   002500  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2359   002502  0E01               	movlw	1
  2360   002504  1A06               	xorwf	___awdiv@sign^0,f,c
  2361   002506                     l1221:
  2362   002506  0E00               	movlw	0
  2363   002508  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2364   00250A  0E00               	movlw	0
  2365   00250C  6E07               	movwf	___awdiv@quotient^0,c
  2366   00250E  5003               	movf	___awdiv@divisor^0,w,c
  2367   002510  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2368   002512  B4D8               	btfsc	status,2,c
  2369   002514  EF8E  F012         	goto	u591
  2370   002518  EF90  F012         	goto	u590
  2371   00251C                     u591:
  2372   00251C  EFB8  F012         	goto	l1243
  2373   002520                     u590:
  2374   002520  0E01               	movlw	1
  2375   002522  6E05               	movwf	___awdiv@counter^0,c
  2376   002524  EF98  F012         	goto	l1229
  2377   002528                     l1227:
  2378   002528  90D8               	bcf	status,0,c
  2379   00252A  3603               	rlcf	___awdiv@divisor^0,f,c
  2380   00252C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2381   00252E  2A05               	incf	___awdiv@counter^0,f,c
  2382   002530                     l1229:
  2383   002530  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2384   002532  EF9D  F012         	goto	u601
  2385   002536  EF9F  F012         	goto	u600
  2386   00253A                     u601:
  2387   00253A  EF94  F012         	goto	l1227
  2388   00253E                     u600:
  2389   00253E                     l1231:
  2390   00253E  90D8               	bcf	status,0,c
  2391   002540  3607               	rlcf	___awdiv@quotient^0,f,c
  2392   002542  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2393   002544  5003               	movf	___awdiv@divisor^0,w,c
  2394   002546  5C01               	subwf	___awdiv@dividend^0,w,c
  2395   002548  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2396   00254A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2397   00254C  A0D8               	btfss	status,0,c
  2398   00254E  EFAB  F012         	goto	u611
  2399   002552  EFAD  F012         	goto	u610
  2400   002556                     u611:
  2401   002556  EFB2  F012         	goto	l1239
  2402   00255A                     u610:
  2403   00255A  5003               	movf	___awdiv@divisor^0,w,c
  2404   00255C  5E01               	subwf	___awdiv@dividend^0,f,c
  2405   00255E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2406   002560  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2407   002562  8007               	bsf	___awdiv@quotient^0,0,c
  2408   002564                     l1239:
  2409   002564  90D8               	bcf	status,0,c
  2410   002566  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2411   002568  3203               	rrcf	___awdiv@divisor^0,f,c
  2412   00256A  2E05               	decfsz	___awdiv@counter^0,f,c
  2413   00256C  EF9F  F012         	goto	l1231
  2414   002570                     l1243:
  2415   002570  5006               	movf	___awdiv@sign^0,w,c
  2416   002572  B4D8               	btfsc	status,2,c
  2417   002574  EFBE  F012         	goto	u621
  2418   002578  EFC0  F012         	goto	u620
  2419   00257C                     u621:
  2420   00257C  EFC4  F012         	goto	l1247
  2421   002580                     u620:
  2422   002580  6C07               	negf	___awdiv@quotient^0,c
  2423   002582  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2424   002584  B0D8               	btfsc	status,0,c
  2425   002586  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2426   002588                     l1247:
  2427   002588  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2428   00258C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2429   002590  0012               	return		;funcret
  2430   002592                     __end_of___awdiv:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function _calculate_result *****************
  2434 ;; Defined at:
  2435 ;;		line 216 in file "Calculator.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2453 ;;Total ram usage:        0 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 1
  2456 ;; This function calls:
  2457 ;;		___lbdiv
  2458 ;;		_displayEE
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text8
  2465   002640                     __ptext8:
  2466                           	callstack 0
  2467   002640                     _calculate_result:
  2468                           	callstack 29
  2469   002640                     
  2470                           ;Calculator.c: 218:     if (operand == '+') {
  2471   002640  0E2B               	movlw	43
  2472   002642  1816               	xorwf	_operand^0,w,c
  2473   002644  A4D8               	btfss	status,2,c
  2474   002646  EF27  F013         	goto	u781
  2475   00264A  EF29  F013         	goto	u780
  2476   00264E                     u781:
  2477   00264E  EF2E  F013         	goto	l1351
  2478   002652                     u780:
  2479   002652                     
  2480                           ;Calculator.c: 219:         Display_Result_REG = X_Input_REG + Y_Input_REG;
  2481   002652  501B               	movf	_X_Input_REG^0,w,c
  2482   002654  241A               	addwf	_Y_Input_REG^0,w,c
  2483   002656  6E18               	movwf	_Display_Result_REG^0,c
  2484                           
  2485                           ;Calculator.c: 220:     }
  2486   002658  EF67  F013         	goto	l157
  2487   00265C                     l1351:
  2488   00265C  0E2D               	movlw	45
  2489   00265E  1816               	xorwf	_operand^0,w,c
  2490   002660  A4D8               	btfss	status,2,c
  2491   002662  EF35  F013         	goto	u791
  2492   002666  EF37  F013         	goto	u790
  2493   00266A                     u791:
  2494   00266A  EF3C  F013         	goto	l1355
  2495   00266E                     u790:
  2496   00266E                     
  2497                           ;Calculator.c: 222:         Display_Result_REG = X_Input_REG - Y_Input_REG;
  2498   00266E  501A               	movf	_Y_Input_REG^0,w,c
  2499   002670  5C1B               	subwf	_X_Input_REG^0,w,c
  2500   002672  6E18               	movwf	_Display_Result_REG^0,c
  2501                           
  2502                           ;Calculator.c: 223:     }
  2503   002674  EF67  F013         	goto	l157
  2504   002678                     l1355:
  2505   002678  0E2A               	movlw	42
  2506   00267A  1816               	xorwf	_operand^0,w,c
  2507   00267C  A4D8               	btfss	status,2,c
  2508   00267E  EF43  F013         	goto	u801
  2509   002682  EF45  F013         	goto	u800
  2510   002686                     u801:
  2511   002686  EF4C  F013         	goto	l1359
  2512   00268A                     u800:
  2513   00268A                     
  2514                           ;Calculator.c: 225:         Display_Result_REG = X_Input_REG * Y_Input_REG;
  2515   00268A  501B               	movf	_X_Input_REG^0,w,c
  2516   00268C  021A               	mulwf	_Y_Input_REG^0,c
  2517   00268E  006F FFCC  F018    	movff	prodl,_Display_Result_REG
  2518                           
  2519                           ;Calculator.c: 226:     }
  2520   002694  EF67  F013         	goto	l157
  2521   002698                     l1359:
  2522   002698  0E2F               	movlw	47
  2523   00269A  1816               	xorwf	_operand^0,w,c
  2524   00269C  A4D8               	btfss	status,2,c
  2525   00269E  EF53  F013         	goto	u811
  2526   0026A2  EF55  F013         	goto	u810
  2527   0026A6                     u811:
  2528   0026A6  EF65  F013         	goto	l1365
  2529   0026AA                     u810:
  2530   0026AA                     
  2531                           ;Calculator.c: 228:         if (Y_Input_REG != 0) {
  2532   0026AA  501A               	movf	_Y_Input_REG^0,w,c
  2533   0026AC  B4D8               	btfsc	status,2,c
  2534   0026AE  EF5B  F013         	goto	u821
  2535   0026B2  EF5D  F013         	goto	u820
  2536   0026B6                     u821:
  2537   0026B6  EF65  F013         	goto	l1365
  2538   0026BA                     u820:
  2539   0026BA                     
  2540                           ;Calculator.c: 229:             Display_Result_REG = X_Input_REG / Y_Input_REG;
  2541   0026BA  C01A  F001         	movff	_Y_Input_REG,___lbdiv@divisor
  2542   0026BE  501B               	movf	_X_Input_REG^0,w,c
  2543   0026C0  EC9F  F013         	call	___lbdiv
  2544   0026C4  6E18               	movwf	_Display_Result_REG^0,c
  2545                           
  2546                           ;Calculator.c: 230:             }
  2547   0026C6  EF67  F013         	goto	l157
  2548   0026CA                     l1365:
  2549                           
  2550                           ;Calculator.c: 232:             displayEE();
  2551   0026CA  ECED  F013         	call	_displayEE	;wreg free
  2552   0026CE                     l157:
  2553   0026CE  0012               	return		;funcret
  2554   0026D0                     __end_of_calculate_result:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _displayEE *****************
  2558 ;; Defined at:
  2559 ;;		line 242 in file "Calculator.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2577 ;;Total ram usage:        2 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_calculate_result
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text9
  2587   0027DA                     __ptext9:
  2588                           	callstack 0
  2589   0027DA                     _displayEE:
  2590                           	callstack 29
  2591   0027DA                     
  2592                           ;Calculator.c: 244:     PORTD = 0b10001111;
  2593   0027DA  0E8F               	movlw	143
  2594   0027DC  6ECD               	movwf	205,c	;volatile
  2595                           
  2596                           ;Calculator.c: 245:     PORTC = 0b10001111;
  2597   0027DE  0E8F               	movlw	143
  2598   0027E0  6ECC               	movwf	204,c	;volatile
  2599   0027E2                     
  2600                           ;Calculator.c: 246:     PORTAbits.RA0 = PORTCbits.RC0;
  2601   0027E2  A0CC               	btfss	204,0,c	;volatile
  2602   0027E4  D002               	bra	u105
  2603   0027E6  80CA               	bsf	202,0,c	;volatile
  2604   0027E8  D001               	bra	u107
  2605   0027EA                     u105:
  2606   0027EA  90CA               	bcf	202,0,c	;volatile
  2607   0027EC                     u107:
  2608   0027EC                     
  2609                           ;Calculator.c: 247:     PORTAbits.RA1 = PORTCbits.RC1;
  2610   0027EC  A2CC               	btfss	204,1,c	;volatile
  2611   0027EE  D002               	bra	u115
  2612   0027F0  82CA               	bsf	202,1,c	;volatile
  2613   0027F2  D001               	bra	u117
  2614   0027F4                     u115:
  2615   0027F4  92CA               	bcf	202,1,c	;volatile
  2616   0027F6                     u117:
  2617   0027F6                     
  2618                           ;Calculator.c: 249:     _delay((unsigned long)((1500)*(4000000/4000.0)));
  2619   0027F6  0E08               	movlw	8
  2620   0027F8  6E02               	movwf	(??_displayEE+1)^0,c
  2621   0027FA  0E9D               	movlw	157
  2622   0027FC  6E01               	movwf	??_displayEE^0,c
  2623   0027FE  0E06               	movlw	6
  2624   002800                     u1047:
  2625   002800  2EE8               	decfsz	wreg,f,c
  2626   002802  D7FE               	bra	u1047
  2627   002804  2E01               	decfsz	??_displayEE^0,f,c
  2628   002806  D7FC               	bra	u1047
  2629   002808  2E02               	decfsz	(??_displayEE+1)^0,f,c
  2630   00280A  D7FA               	bra	u1047
  2631   00280C  0012               	return		;funcret
  2632   00280E                     __end_of_displayEE:
  2633                           	callstack 0
  2634                           
  2635 ;; *************** function ___lbdiv *****************
  2636 ;; Defined at:
  2637 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbdiv.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  dividend        1    wreg     unsigned char 
  2640 ;;  divisor         1    0[COMRAM] unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  dividend        1    1[COMRAM] unsigned char 
  2643 ;;  quotient        1    3[COMRAM] unsigned char 
  2644 ;;  counter         1    2[COMRAM] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      unsigned char 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2654 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2655 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2658 ;;Total ram usage:        4 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_calculate_result
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text10
  2668   00273E                     __ptext10:
  2669                           	callstack 0
  2670   00273E                     ___lbdiv:
  2671                           	callstack 29
  2672                           
  2673                           ;incstack = 0
  2674                           ;___lbdiv@dividend stored from wreg
  2675   00273E  6E02               	movwf	___lbdiv@dividend^0,c
  2676   002740  6A04               	clrf	___lbdiv@quotient^0,c
  2677   002742  5001               	movf	___lbdiv@divisor^0,w,c
  2678   002744  B4D8               	btfsc	status,2,c
  2679   002746  EFA7  F013         	goto	u691
  2680   00274A  EFA9  F013         	goto	u690
  2681   00274E                     u691:
  2682   00274E  EFCA  F013         	goto	l1309
  2683   002752                     u690:
  2684   002752  0E01               	movlw	1
  2685   002754  6E03               	movwf	___lbdiv@counter^0,c
  2686   002756  EFB0  F013         	goto	l1297
  2687   00275A                     l1293:
  2688   00275A  90D8               	bcf	status,0,c
  2689   00275C  3601               	rlcf	___lbdiv@divisor^0,f,c
  2690   00275E  2A03               	incf	___lbdiv@counter^0,f,c
  2691   002760                     l1297:
  2692   002760  AE01               	btfss	___lbdiv@divisor^0,7,c
  2693   002762  EFB5  F013         	goto	u701
  2694   002766  EFB7  F013         	goto	u700
  2695   00276A                     u701:
  2696   00276A  EFAD  F013         	goto	l1293
  2697   00276E                     u700:
  2698   00276E                     l1299:
  2699   00276E  90D8               	bcf	status,0,c
  2700   002770  3604               	rlcf	___lbdiv@quotient^0,f,c
  2701   002772  5001               	movf	___lbdiv@divisor^0,w,c
  2702   002774  5C02               	subwf	___lbdiv@dividend^0,w,c
  2703   002776  A0D8               	btfss	status,0,c
  2704   002778  EFC0  F013         	goto	u711
  2705   00277C  EFC2  F013         	goto	u710
  2706   002780                     u711:
  2707   002780  EFC5  F013         	goto	l1305
  2708   002784                     u710:
  2709   002784  5001               	movf	___lbdiv@divisor^0,w,c
  2710   002786  5E02               	subwf	___lbdiv@dividend^0,f,c
  2711   002788  8004               	bsf	___lbdiv@quotient^0,0,c
  2712   00278A                     l1305:
  2713   00278A  90D8               	bcf	status,0,c
  2714   00278C  3201               	rrcf	___lbdiv@divisor^0,f,c
  2715   00278E  2E03               	decfsz	___lbdiv@counter^0,f,c
  2716   002790  EFB7  F013         	goto	l1299
  2717   002794                     l1309:
  2718   002794  5004               	movf	___lbdiv@quotient^0,w,c
  2719   002796  0012               	return		;funcret
  2720   002798                     __end_of___lbdiv:
  2721                           	callstack 0
  2722                           
  2723                           	psect	rparam
  2724   000001                     ___rparam_used  equ	1
  2725   000000                     ___param_bank   equ	0
  2726   000000                     __Lparam        equ	__Lrparam
  2727   000000                     __Hparam        equ	__Hrparam
  2728                           
  2729                           	psect	config
  2730                           
  2731                           ;Config register CONFIG1L @ 0x300000
  2732                           ;	External Oscillator Selection
  2733                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2734                           ;	Reset Oscillator Selection
  2735                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2736   300000                     	org	3145728
  2737   300000  F8                 	db	248
  2738                           
  2739                           ;Config register CONFIG1H @ 0x300001
  2740                           ;	Clock out Enable bit
  2741                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2742                           ;	PRLOCKED One-Way Set Enable bit
  2743                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2744                           ;	Clock Switch Enable bit
  2745                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2746                           ;	Fail-Safe Clock Monitor Enable bit
  2747                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2748   300001                     	org	3145729
  2749   300001  FF                 	db	255
  2750                           
  2751                           ;Config register CONFIG2L @ 0x300002
  2752                           ;	MCLR Enable bit
  2753                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2754                           ;	Power-up timer selection bits
  2755                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2756                           ;	Multi-vector enable bit
  2757                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2758                           ;	IVTLOCK bit One-way set enable bit
  2759                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2760                           ;	Low Power BOR Enable bit
  2761                           ;	LPBOREN = OFF, ULPBOR disabled
  2762                           ;	Brown-out Reset Enable bits
  2763                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2764   300002                     	org	3145730
  2765   300002  FF                 	db	255
  2766                           
  2767                           ;Config register CONFIG2H @ 0x300003
  2768                           ;	Brown-out Reset Voltage Selection bits
  2769                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2770                           ;	ZCD Disable bit
  2771                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2772                           ;	PPSLOCK bit One-Way Set Enable bit
  2773                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2774                           ;	Stack Full/Underflow Reset Enable bit
  2775                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2776                           ;	Debugger Enable bit
  2777                           ;	DEBUG = OFF, Background debugger disabled
  2778                           ;	Extended Instruction Set Enable bit
  2779                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2780   300003                     	org	3145731
  2781   300003  FF                 	db	255
  2782                           
  2783                           ;Config register CONFIG3L @ 0x300004
  2784                           ;	WDT Period selection bits
  2785                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2786                           ;	WDT operating mode
  2787                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2788   300004                     	org	3145732
  2789   300004  9F                 	db	159
  2790                           
  2791                           ;Config register CONFIG3H @ 0x300005
  2792                           ;	WDT Window Select bits
  2793                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2794                           ;	WDT input clock selector
  2795                           ;	WDTCCS = SC, Software Control
  2796   300005                     	org	3145733
  2797   300005  FF                 	db	255
  2798                           
  2799                           ;Config register CONFIG4L @ 0x300006
  2800                           ;	Boot Block Size selection bits
  2801                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2802                           ;	Boot Block enable bit
  2803                           ;	BBEN = OFF, Boot block disabled
  2804                           ;	Storage Area Flash enable bit
  2805                           ;	SAFEN = OFF, SAF disabled
  2806                           ;	Application Block write protection bit
  2807                           ;	WRTAPP = OFF, Application Block not write protected
  2808   300006                     	org	3145734
  2809   300006  FF                 	db	255
  2810                           
  2811                           ;Config register CONFIG4H @ 0x300007
  2812                           ;	Boot Block Write Protection bit
  2813                           ;	WRTB = OFF, Boot Block not write-protected
  2814                           ;	Configuration Register Write Protection bit
  2815                           ;	WRTC = OFF, Configuration registers not write-protected
  2816                           ;	Data EEPROM Write Protection bit
  2817                           ;	WRTD = OFF, Data EEPROM not write-protected
  2818                           ;	SAF Write protection bit
  2819                           ;	WRTSAF = OFF, SAF not Write Protected
  2820                           ;	Low Voltage Programming Enable bit
  2821                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2822   300007                     	org	3145735
  2823   300007  FF                 	db	255
  2824                           
  2825                           ;Config register CONFIG5L @ 0x300008
  2826                           ;	PFM and Data EEPROM Code Protection bit
  2827                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2828   300008                     	org	3145736
  2829   300008  FF                 	db	255
  2830                           
  2831                           ;Config register CONFIG5H @ 0x300009
  2832                           ;	unspecified, using default values
  2833   300009                     	org	3145737
  2834   300009  FF                 	db	255
  2835                           tosu	equ	0x3FFF
  2836                           tosh	equ	0x3FFE
  2837                           tosl	equ	0x3FFD
  2838                           stkptr	equ	0x3FFC
  2839                           pclatu	equ	0x3FFB
  2840                           pclath	equ	0x3FFA
  2841                           pcl	equ	0x3FF9
  2842                           tblptru	equ	0x3FF8
  2843                           tblptrh	equ	0x3FF7
  2844                           tblptrl	equ	0x3FF6
  2845                           tablat	equ	0x3FF5
  2846                           prodh	equ	0x3FF4
  2847                           prodl	equ	0x3FF3
  2848                           indf0	equ	0x3FEF
  2849                           postinc0	equ	0x3FEE
  2850                           postdec0	equ	0x3FED
  2851                           preinc0	equ	0x3FEC
  2852                           plusw0	equ	0x3FEB
  2853                           fsr0h	equ	0x3FEA
  2854                           fsr0l	equ	0x3FE9
  2855                           wreg	equ	0x3FE8
  2856                           indf1	equ	0x3FE7
  2857                           postinc1	equ	0x3FE6
  2858                           postdec1	equ	0x3FE5
  2859                           preinc1	equ	0x3FE4
  2860                           plusw1	equ	0x3FE3
  2861                           fsr1h	equ	0x3FE2
  2862                           fsr1l	equ	0x3FE1
  2863                           bsr	equ	0x3FE0
  2864                           indf2	equ	0x3FDF
  2865                           postinc2	equ	0x3FDE
  2866                           postdec2	equ	0x3FDD
  2867                           preinc2	equ	0x3FDC
  2868                           plusw2	equ	0x3FDB
  2869                           fsr2h	equ	0x3FDA
  2870                           fsr2l	equ	0x3FD9
  2871                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    26
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_display_number
    _waitfor_key->_scan_keypad
    _display_number->___awdiv
    _calculate_result->___lbdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1438
                                             15 COMRAM     3     3      0
                   _calculate_result
                     _display_number
                  _setup_keypadports
                _setup_sevensegports
                        _waitfor_key
 ---------------------------------------------------------------------------------
 (1) _waitfor_key                                          4     4      0     150
                                              4 COMRAM     4     4      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          4     4      0     105
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup_sevensegports                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_keypadports                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_number                                       7     5      2     808
                                              8 COMRAM     7     5      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _calculate_result                                     0     0      0     171
                            ___lbdiv
                          _displayEE
 ---------------------------------------------------------------------------------
 (2) _displayEE                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     171
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculate_result
     ___lbdiv
     _displayEE
   _display_number
     ___awdiv
     ___awmod
   _setup_keypadports
   _setup_sevensegports
   _waitfor_key
     _scan_keypad

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1401      0       0      0.0%
BITBIGSFRlll       576      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     18      27     28.4%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRlh         15      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      27      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Apr 10 14:21:40 2025

                         l89 2212                           u10 22A0                           u11 229C  
                         u20 22AE                           u21 22AA                           u30 22DC  
                         u31 22D8                           u40 22EA                           u41 22E6  
                         u50 2322                           u51 231E                           u60 2330  
                         u61 232C                           u70 2368                           u71 2364  
                         u80 2376                           u81 2372                           u90 23C0  
                         u91 23BC                 ___awdiv@sign 0006                          l111 2222  
                        l120 22A0                          l105 282A                          l114 222E  
                        l123 23C2                          l108 27D8                          l124 2314  
                        l116 2234                          l133 2368                          l125 22DC  
                        l117 223A                          l118 2240                          l119 22CE  
                        l160 280C                          l128 235A                          l144 273C  
                        l401 2590                          l129 2322                          l157 26CE  
                        l414 263E                          l167 24CE                          l576 2796  
                        l851 2246                          l843 221A                          l853 2282  
                        l871 2330                          l855 2292                          l881 23A0  
                        l865 22EA                          l883 23A4                          l859 22AE  
                        l893 27DA                          l885 23C0                          l877 2376  
                        l895 27E2                          l897 27EC                          l899 27F6  
                        u105 27EA                          u115 27F4                          u107 27EC  
                        u117 27F6                          u270 26FA                          u271 26F6  
                        u600 253E                          u280 2714                          u601 253A  
                        u281 2710                          u610 255A                          u290 2724  
                        u611 2556                          u291 2720                          u700 276E  
                        u620 2580                          u701 276A                          u621 257C  
                        u710 2784                          u630 25A2                          u711 2780  
                        u631 259E                          u800 268A                          u640 25BC  
                        u720 23E0                          u801 2686                          u641 25B8  
                        u721 23DC                          u810 26AA                          u570 24E0  
                        u650 25D6                          u730 2404                          u811 26A6  
                        u571 24DC                          u651 25D2                          u731 2400  
                        u820 26BA                          u580 24FA                          u660 25F4  
                        u740 241C                          u900 20FC                          u821 26B6  
                        u581 24F6                          u661 25F0                          u741 2418  
                        u901 20F8                          u590 2520                          u670 260A  
                        u750 2484                          u910 210E                          u830 203C  
                        u591 251C                          u671 2606                          u751 2480  
                        u911 210A                          u831 2038                          u680 262E  
                        u920 2120                          u681 262A                          u921 211C  
                        u690 2752                          u930 2130                          u691 274E  
                        u931 212C                          u780 2652                          u940 2152  
                        u860 2096                          u781 264E                          u765 24AA  
                        u941 214E                          u861 2092                          u845 2076  
                        u790 266E                          u950 2162                          u870 20A6  
                        u791 266A                          u775 24B4                          u767 24AC  
                        u951 215E                          u871 20A2                          u855 2080  
                        u847 2078                          u960 217E                          u880 20C2  
                        u777 24B6                          u961 217A                          u881 20BE  
                        u857 2082                          u970 21A6                          u890 20EA  
                        u971 21A2                          u891 20E6                          u980 21C0  
                        u981 21BC                          u997 21E4       __end_of_display_number 24D0  
               ___awmod@sign 0006                          wreg 3FE8                         l1011 2826  
                       l1021 27B6                         l1013 2798                         l1007 2820  
                       l1031 27D6                         l1023 27CC                         l1015 279C  
                       l1009 2824                         l1025 27CE                         l1017 27B0  
                       l1041 26FA                         l1033 26D0                         l1211 24E0  
                       l1027 27D0                         l1019 27B4                         l1051 273A  
                       l1043 2714                         l1035 26D0                         l1301 2784  
                       l1221 2506                         l1213 24E8                         l1029 27D2  
                       l1045 2724                         l1037 26DC                         l1303 2788  
                       l1231 253E                         l1223 250E                         l1215 24EC  
                       l1207 24D0                         l1039 26E4                         l1305 278A  
                       l1241 256A                         l1233 2544                         l1225 2520  
                       l1217 24FA                         l1209 24D2                         l1321 240C  
                       l1313 23C4                         l1049 272A                         l1401 20EA  
                       l1307 278E                         l1235 255A                         l1227 2528  
                       l1243 2570                         l1219 2502                         l1251 2592  
                       l1331 2440                         l1323 240E                         l1315 23E0  
                       l1411 213A                         l1403 20FC                         l1309 2794  
                       l1245 2580                         l1237 2562                         l1229 2530  
                       l1261 25BC                         l1253 2594                         l1341 24A2  
                       l1333 2458                         l1325 241C                         l1317 23E8  
                       l1421 217E                         l1413 2142                         l1405 210E  
                       l1351 265C                         l1247 2588                         l1239 2564  
                       l1271 25F4                         l1263 25C4                         l1255 25A2  
                       l1343 24AC                         l1335 2474                         l1327 2424  
                       l1319 2404                         l1431 21AE                         l1423 2182  
                       l1415 2152                         l1407 2120                         l1361 26AA  
                       l1353 266E                         l1281 262E                         l1273 260A  
                       l1265 25D6                         l1257 25AA                         l1345 24B6  
                       l1337 2484                         l1329 2428                         l1433 21C0  
                       l1425 2186                         l1417 2162                         l1409 2130  
                       l1291 2752                         l1363 26BA                         l1355 2678  
                       l1347 2640                         l1283 2636                         l1275 2612  
                       l1267 25DE                         l1259 25AE                         l1339 2486  
                       l1435 21C4                         l1419 216E                         l1427 2194  
                       l1443 21F4                         l1371 2020                         l1293 275A  
                       l1365 26CA                         l1357 268A                         l1349 2652  
                       l1277 2618                         l1269 25E6                         l1437 21CE  
                       l1429 21A6                         l1381 206E                         l1373 2024  
                       l1295 275E                         l1287 2740                         l1359 2698  
                       l1279 261E                         l1439 21DA                         l1391 20B2  
                       l1383 2078                         l1375 202A                         l1297 2760  
                       l1289 2742                         l1465 225C                         l1393 20C2  
                       l1385 2086                         l1377 203C                         l1369 201C  
                       l1299 276E                         l1395 20C6                         l1387 2096  
                       l1379 2046                         l1397 20CA                         l1389 20A6  
                       l1399 20D8                         u1007 26DE                         u1017 2730  
                       u1027 2288                         u1037 24C0                         u1047 2800  
                       _LATA 3FBA                         _LATB 3FBB                         _LATC 3FBC  
                       _LATD 3FBD                         _main 201C                         prodl 3FF3  
                       start FFFC                 ___param_bank 0000                        ?_main 0001  
            __end_of___awdiv 2592              __end_of___lbdiv 2798              __end_of___awmod 2640  
            ___awdiv@divisor 0003              ___awdiv@counter 0005                        _PORTA 3FCA  
                      _PORTC 3FCC                        _PORTD 3FCD                        _TRISA 3FC2  
                      _TRISB 3FC3                        _TRISC 3FC4                        _TRISD 3FC5  
            ?_display_number 0009                        _state 0015                        tablat 3FF5  
                      status 3FD8              ___lbdiv@divisor 0001                 ?_scan_keypad 0001  
            ___lbdiv@counter 0003              __initialization 280E                 __end_of_main 221A  
                     ??_main 0010                __activetblptr 0003             ___awdiv@dividend 0001  
                     _ANSELA 3A40                       _ANSELB 3A50                       _ANSELC 3A60  
                     _ANSELD 3A70            ?_calculate_result 0001           ??_calculate_result 0005  
__end_of_setup_sevensegports 27DA                    ??___awdiv 0005                    ??___lbdiv 0002  
                  ??___awmod 0005                       _segMap 2011                       _keypad 2001  
                     clear_0 2814             ___awdiv@quotient 0007              ___awmod@divisor 0003  
                     isa$std 0001                       _result 0013              ___awmod@counter 0005  
               ?_waitfor_key 0001                 __mediumconst 2000                       tblptrh 3FF7  
                     tblptrl 3FF6                       tblptru 3FF8             ___lbdiv@dividend 0002  
                 __accesstop 0060      __end_of__initialization 281A                ___rparam_used 0001  
             scan_keypad@row 0003               __pcstackCOMRAM 0001             ___lbdiv@quotient 0004  
                _X_Input_REG 001B                  _Y_Input_REG 001A                _current_input 0017  
           ??_display_number 000B                      __Hparam 0000                      __Lparam 0000  
          __end_of_displayEE 280E                      ___awdiv 24D0                      ___lbdiv 273E  
                    ___awmod 2592                 __psmallconst 2000                      __pcinit 280E  
                    __ramtop 2000                      __ptext0 201C                      __ptext1 26D0  
                    __ptext2 221A                      __ptext3 2798                      __ptext4 2820  
                    __ptext5 23C4                      __ptext6 2592                      __ptext7 24D0  
                    __ptext8 2640                      __ptext9 27DA             ___awmod@dividend 0001  
                    _operand 0016                      main@key 0012         end_of_initialization 281A  
                    postinc0 3FEE                    _PORTAbits 3FCA                    _PORTBbits 3FCB  
                  _PORTCbits 3FCC                    _PORTDbits 3FCD         display_number@result 0009  
             __end_of_segMap 201B               __end_of_keypad 2011                _Operation_REG 0019  
        start_initialization 280E           waitfor_key@timeout 0006                  __pbssCOMRAM 0013  
         display_number@ones 000E           display_number@tens 000D                ??_scan_keypad 0001  
                   ?___awdiv 0001                     ?___lbdiv 0001                     ?___awmod 0001  
           _calculate_result 2640                    _displayEE 27DA                  __smallconst 2000  
                   _LATBbits 3FBB          __end_of_scan_keypad 23C4                   ?_displayEE 0001  
              ??_waitfor_key 0005          _setup_sevensegports 2798                     __Hrparam 0000  
                   __Lrparam 0000         ?_setup_sevensegports 0001            display_number@neg 000F  
          _setup_keypadports 2820           ?_setup_keypadports 0001                     __ptext10 273E  
        __end_of_waitfor_key 273E          ??_setup_keypadports 0001                  _scan_keypad 221A  
                   isa$xinst 0000        ??_setup_sevensegports 0001                  ??_displayEE 0001  
  __end_of_setup_keypadports 282C           _Display_Result_REG 0018     __end_of_calculate_result 26D0  
                _waitfor_key 26D0               _display_number 23C4               waitfor_key@key 0008  
